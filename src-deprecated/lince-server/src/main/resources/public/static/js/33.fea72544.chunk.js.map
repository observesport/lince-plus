{"version":3,"sources":["components/lince/LinceResultsTable.js","components/lince/LinceResultsContingencyMatrix.js","../../../shared/containers/Widgets/Widgets.styles.js","../../../shared/containers/Widgets/WidgetsWrapper.js","components/lince/LinceResultsMainPanel.js","components/lince/LinceResultsKappaLauncher.js","containers/Lince/Observers.js","../../../shared/components/utility/layoutWrapper.style.js","../../../shared/components/utility/layoutContent.style.js","../../../shared/components/utility/layoutContent.js","../../../shared/components/utility/pageHeader.style.js","../../../shared/components/utility/pageHeader.js","components/lince/StyledLayoutComponents.js","config/i18n.js","components/lince/StyledResizable.js","../../../shared/containers/Widgets/Sticker/StickerWidget.styles.js","../../../shared/containers/Widgets/Sticker/StickerWidget.js"],"names":["data","id","title","by","lastOpened","columns","cell","React","createElement","FontAwesomeIcon","icon","faTh","style","fill","width","borderBottom","marginBottom","name","selector","sortable","grow","color","fontSize","fontWeight","customStyles","headRow","border","headCells","rows","highlightOnHoverStyle","backgroundColor","borderBottomColor","borderRadius","outline","pagination","getTableIconCol","getTableHeaderCol","getTableRowCol","LinceResultsTable","props","DataTable","responsive","dense","highlightOnHover","pointerOnHover","defaultProps","LinceCard","styled","_Card","_templateObject","_taggedTemplateLiteral","LinceResultsContingencyMatrix","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","_renderContingencyTable","bind","_assertThisInitialized","_createClass","key","value","item","colsHeader","contingencyMatrix","cols","forEach","col","idx","push","_objectSpread","i","slice","length","criteria","_this2","this","content","map","Component","WidgetWrapper","div","gutterTop","gutterRight","gutterBottom","gutterLeft","padding","bgColor","_templateObject2","height","concat","palette","_templateObject3","align","arguments","undefined","getAlignContent","_ref","children","_objectWithoutProperties","_excluded","Object","assign","className","LinceResultsMainPanel","nonErrValue","isNaN","toPrecision","showResults","currentAction","Trans","i18nKey","kappaResult","code","agreement","expectedDisagreement","observedDisagreement","kappaProResult","elements","registerContent","size","research","LinceRegisterExternal","register","fullMode","IsoWidgetsWrapper","StickerWidget","text","number","fontColor","LinceResultsObserverSelector","state","expanded","_onExpand","onExpand","nextValue","setState","user","userName","Fragment","_Button","onClick","type","float","_Row","gutter","justify","_Col","md","paddingTop","cursor","registerAmount","LinceResultsKappaLauncher","_Component2","_super2","users","currentUser","fetchRegisterById","_onActionRequest","fetchProfileInfo","_this3","selected","profile","userProfiles","refs","registerCode","ShowNotification","fetchKappaIndex","fetchKappaProIndex","fetchContingencyMatrix","showError","u","_this4","console","log","kappaProIndex","sm","xs","display","StyledResizable","defaultSize","minWidth","minHeight","v","ref","isActive","kappaIndex","registerTemp","connect","lince","forwardRef","ReactGA","initialize","siteConfig","google","analyticsKey","pageview","window","location","pathname","search","ObserversApp","_React$Component","handleClick","e","actions","active","label","info","Provider","store","StyledLayoutContentWrapper","LinceLayoutContent","PageHeader","span","LinceMenu","selectedKeys","action","_Menu","Item","LayoutContentWrapper","LayoutContentStyle","WDComponentTitleWrapper","h1","ComponentTitleWrapper","WithDirection","LayoutContent","CenteredCol","i18n","use","Backend","LanguageDetector","initReactI18next","init","preload","initImmediate","load","detection","lookupQuerystring","fallbackLng","default","debug","react","wait","bindI18n","interpolation","escapeValue","zIndex","borderRight","margin","Resizable","StickerWidgetWrapper","textColor","widgetStyle","iconStyle"],"mappings":"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","file":"static/js/33.fea72544.chunk.js","sourcesContent":["import React from 'react';\nimport DataTable from \"react-data-table-component\";\nimport {faTh} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nconst data = [\n    {\n        id: 1,\n        title: 'Cutting Costs',\n        by: 'me',\n        lastOpened: 'Aug 7 9:52 AM',\n    },\n    {\n        id: 2,\n        title: 'Wedding Planner',\n        by: 'me',\n        lastOpened: 'Sept 14 2:52 PM',\n    },\n    {\n        id: 3,\n        title: 'Expense Tracker',\n        by: 'me',\n        lastOpened: 'Sept 12 2:41 PM',\n    },\n    {\n        id: 4,\n        title: 'Home Brew Water Calculator',\n        by: 'me',\n        lastOpened: 'Jube 3 5:45 PM',\n    },\n];\nconst columns = [\n    {\n        cell: () => <FontAwesomeIcon icon={faTh} style={{fill: '#43a047'}}/>,\n        width: '56px', // custom width for icon button\n        style: {\n            borderBottom: '1px solid #FFFFFF',\n            marginBottom: '-1px',\n        },\n    },\n    {\n        name: 'Title',\n        selector: 'title',\n        sortable: true,\n        grow: 2,\n        style: {\n            color: '#202124',\n            fontSize: '14px',\n            fontWeight: 500,\n        },\n    },\n    {\n        name: 'Owner',\n        selector: 'by',\n        sortable: true,\n        style: {\n            color: 'rgba(0,0,0,.54)',\n        },\n    }\n];\n\nconst customStyles = {\n    headRow: {\n        style: {\n            border: 'none',\n        },\n    },\n    headCells: {\n        style: {\n            color: '#202124',\n            fontSize: '14px',\n        },\n    },\n    rows: {\n        highlightOnHoverStyle: {\n            backgroundColor: 'rgb(230, 244, 244)',\n            borderBottomColor: '#FFFFFF',\n            borderRadius: '25px',\n            outline: '1px solid #FFFFFF',\n        },\n    },\n    pagination: {\n        style: {\n            border: 'none',\n        },\n    },\n};\n\n\n\nexport function getTableIconCol() {\n    return {\n        cell: () => <FontAwesomeIcon icon={faTh} style={{fill: '#43a047'}}/>,\n        width: '56px', // custom width for icon button\n        style: {\n            borderBottom: '1px solid #FFFFFF',\n            marginBottom: '-1px',\n        },\n    }\n}\n\nexport function getTableHeaderCol(title, selector) {\n    return {\n        name: title,\n        selector: selector,\n        sortable: true,\n        grow: 2,\n        style: {\n            color: '#202124',\n            fontSize: '14px',\n            fontWeight: 500,\n        }\n    }\n}\n\nexport function getTableRowCol(title, selector) {\n    return {\n        name: title,\n        selector: selector,\n        sortable: true,\n        style: {\n            color: 'rgba(0,0,0,.54)',\n        },\n    }\n}\n\nfunction LinceResultsTable(props) {\n    return <DataTable\n        responsive={true}\n        dense={props.dense}\n        title={props.title}\n        columns={props.columns ? props.columns : columns}\n        data={props.data ? props.data : data}\n        customStyles={customStyles}\n        highlightOnHover\n        pointerOnHover\n    />\n}\nLinceResultsTable.defaultProps ={\n    responsive:true,\n    dense:true\n};/*\nLinceResultsTable.PropTypes = {\n    title: PropTypes.string,\n    responsive: PropTypes.bool,\n    dense: PropTypes.bool,\n    columns: PropTypes.array,\n    data: PropTypes.array,\n};*/\nexport default LinceResultsTable;","import React, {Component} from 'react';\nimport PropTypes from \"prop-types\";\nimport LinceResultsTable, {getTableIconCol, getTableRowCol} from \"./LinceResultsTable\";\nimport {Card} from \"antd\";\nimport styled from 'styled-components';\n\nconst LinceCard = styled(Card)`\n    .ant-card-body{\n        padding-left:0px;\n        padding-right:0px;\n    }\n`;\n\nclass LinceResultsContingencyMatrix extends Component {\n    constructor(props) {\n        super(props);\n        //this._renderContingencyRow = this._renderContingencyRow.bind(this);\n        this._renderContingencyTable = this._renderContingencyTable.bind(this);\n    }\n\n    /*  _renderContingencyRow(code, index, rowValue) {\n          const keyVal = \"elem\" + code + index;\n          return <tr key={keyVal}>\n              {rowValue.map((col, i) => {\n                  return <td key={i + keyVal + \"_\" + i + \"_\" + col}>{col}</td>\n              })}\n          </tr>\n      }\n  */\n    _renderContingencyTable(item) {\n        const colsHeader = item.contingencyMatrix[0];\n        let cols = [\n            getTableIconCol(),\n        ];\n        colsHeader.forEach((col, idx) => {\n            cols.push({\n                ...getTableRowCol(col, \"\")\n                //, width: \"80px\"\n                , sortable: false\n                , cell: (i) => {\n                    return <span>{i[idx]}</span>\n                }\n            });\n        });\n        let data = item.contingencyMatrix.slice(1, item.contingencyMatrix.length);\n        return <LinceResultsTable\n            title={item.criteria.name}\n            columns={cols}\n            data={data}\n        />\n        /* <table className=\"table table-bordered table-hover\" key={\"k\" + item.criteria.name}>\n            <thead>\n            <tr>\n                <th>\n                    <span className=\"label label-sm label-info\">{item.criteria.name}</span>\n                </th>\n            </tr>\n            </thead>\n            <tbody>\n            {item.contingencyMatrix.map((elem, i) => {\n                return this._renderContingencyRow(item.criteria.name, i, elem)\n            })}\n            </tbody>\n        </table>*/\n\n    }\n\n    render() {\n        return <LinceCard title={this.props.title}>\n            {this.props.content.map(i => {\n                return this._renderContingencyTable((i))\n            })}\n        </LinceCard>\n        /*<div className=\"todo-tasks-container\">\n            <div className=\"todo-head\">\n                <h3><i className=\"icon-arrow-left-circle\"/>\n                    <span>{this.props.title}</span></h3>\n            </div>\n            {this.props.content.map(i => {\n                return this._renderContingencyTable((i))\n            })}\n        </div>*/\n    }\n}\n\nLinceResultsContingencyMatrix.propTypes = {\n    title: PropTypes.string,\n    content: PropTypes.array\n};\n\nLinceResultsContingencyMatrix.defaultProps = {\n    title: \"Tablas de contingencia\",\n    content: []\n};\nexport default (LinceResultsContingencyMatrix);\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n\nconst WidgetWrapper = styled.div`\n  margin: 0 10px;\n  width: ${props => props.width}px;\n  margin-top: ${props => props.gutterTop}px;\n  margin-right: ${props => props.gutterRight}px;\n  margin-bottom: ${props => props.gutterBottom}px;\n  margin-left: ${props => props.gutterLeft}px;\n  padding: ${props => props.padding};\n  background-color: ${props => props.bgColor}px;\n  @media only screen and (max-width: 767) {\n    margin-right: 0 !important;\n  }\n`;\n\nconst WidgetBox = styled.div`\n  width: 100%;\n  height: ${props => (props.height ? `${props.height}px` : '100%')};\n  padding: ${props => (props.padding ? props.padding : '30px')};\n  background-color: #ffffff;\n  border: 1px solid ${palette('border', 2)};\n\n  canvas {\n    width: 100% !important;\n    height: 100% !important;\n  }\n`;\nconst getAlignContent = (align = 'flex-start') => {\n  if (align === 'start') return 'flex-start';\n  if (align === 'end') return 'flex-end';\n  return align;\n};\nconst WidgetColumn = styled.div`\n  align-content: ${props => getAlignContent(props.align)};\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  margin-top: ${props => props.gutterTop}px;\n  margin-right: ${props => props.gutterRight}px;\n  margin-bottom: ${props => props.gutterBottom}px;\n  margin-left: ${props => props.gutterLeft}px;\n  padding: ${props => props.padding}px;\n  width: ${props => props.width}px;\n`;\n\nexport { WidgetWrapper, WidgetBox, WidgetColumn };\n","import React from 'react';\nimport { WidgetWrapper } from './Widgets.styles';\n\nexport default function({ children, ...props }) {\n  return (\n    <WidgetWrapper className=\"isoWidgetsWrapper\" {...props}>\n      {children}\n    </WidgetWrapper>\n  );\n}\n","import React, {Component} from 'react';\nimport PropTypes from \"prop-types\";\nimport LinceResultsContingencyMatrix from \"./LinceResultsContingencyMatrix\";\nimport {Trans} from 'react-i18next';\nimport {Card} from \"antd\";\nimport StickerWidget from \"@iso/containers/Widgets/Sticker/StickerWidget\";\nimport IsoWidgetsWrapper from \"@iso/containers/Widgets/WidgetsWrapper\";\nimport LinceRegisterExternal from \"./LinceRegisterExternal\";\nimport LinceResultsTable, {getTableHeaderCol, getTableIconCol, getTableRowCol} from \"./LinceResultsTable\";\n\nclass LinceResultsMainPanel extends Component {\n    constructor(props) {\n        super(props);\n        this.nonErrValue = this.nonErrValue.bind(this);\n    }\n\n    nonErrValue(value) {\n        return (value && !isNaN(value)) ? value.toPrecision(6) : \"-\";\n    }\n\n    render() {\n        if (!this.props.showResults) {\n            let elements = [];\n            if (this.props.registerContent) {\n                elements = this.props.registerContent;\n            }\n            const size = (null !== elements) ? elements.length : 0;\n            const research = this.props.name;\n            if (size > 0 || research !== \"\") {\n                return (\n                    <Card>\n                        <h3><span className=\"todo-grey\"><Trans\n                            i18nKey=\"results.observationFrom\">Observación de</Trans>&#160;\n                                </span>{research}</h3>\n                        <p className=\"todo-inline\">{size} <Trans i18nKey=\"scenes\">Escenas</Trans></p>\n                        <LinceRegisterExternal register={elements} fullMode={false}/>\n                    </Card>\n\n                );\n            } else {\n                return <Card title={<Trans\n                    i18nKey=\"results.selectRegister\">Selecciona un registro a visualizar</Trans>}>\n                    <IsoWidgetsWrapper>\n                        <StickerWidget text={\"Selecciona en el panel izquierdo\"}\n                                       number={0}\n                                       icon={\"ion-wand\"}\n                                       fontColor={\"#ffffff\"}\n                                       bgColor={\"#42A5F6\"}\n                        />\n                    </IsoWidgetsWrapper>\n                </Card>\n            }\n        } else {\n\n            if (this.props.currentAction.key === \"kappa\") {\n                const cols = [\n                    getTableIconCol(),\n                    getTableHeaderCol(\"Criteria\", \"key\"),\n                    {\n                        ...getTableRowCol(\"Value\", \"valor\"), cell: (i) => {\n                            return <span>{this.nonErrValue(i.value)}</span>\n                        }\n                    }\n                ];\n                return <Card>\n                    <LinceResultsTable\n                        title={<Trans i18nKey=\"results.kappaResult\">Resultado de cálculo del índice Kappa</Trans>}\n                        columns={cols}\n                        data={this.props.kappaResult}\n                    />\n                </Card>\n            }\n            if (this.props.currentAction.key === \"kappa-pro\") {\n                const cols = [\n                    getTableIconCol(),\n                    {\n                        ...getTableHeaderCol(\"Criteria\", \"key\"), cell: (i) => {\n                            return <span>{i.criteria.code}</span>\n                        }\n                    },\n                    {\n                        ...getTableRowCol(\"Agreement\", \"agreement\"), cell: (i) => {\n                            return <span>{this.nonErrValue(i.agreement)}</span>\n                        }\n                    },\n                    {\n                        ...getTableRowCol(\"Expected disagreement\", \"expectedDisagreement\"), cell: (i) => {\n                            return <span>{this.nonErrValue(i.expectedDisagreement)}</span>\n                        }\n                    },\n                    {\n                        ...getTableRowCol(\"Observed disagreement\", \"observedDisagreement\"), cell: (i) => {\n                            return <span>{this.nonErrValue(i.observedDisagreement)}</span>\n                        }\n                    }\n                ];\n                return <Card>\n                    <LinceResultsTable\n                        title={<Trans i18nKey=\"results.fleissKappa\">Resultado de Índice Fleiss’s κ (1971)</Trans>}\n                        columns={cols}\n                        data={this.props.kappaProResult}\n                    />\n                </Card>\n            }\n            if (this.props.currentAction.key === \"matrix\") {\n                return <LinceResultsContingencyMatrix content={this.props.contingencyMatrix}/>\n            }\n            return <div className=\"todo-tasks-container\">\n                <div className=\"todo-head\">\n                    <h3><i className=\"icon-arrow-left-circle\"/>\n                        <span><Trans\n                            i18nKey=\"results.pressExecute\">Presiona ejecutar para ver un resultado</Trans></span></h3>\n                </div>\n            </div>\n        }\n    }\n}\n\nLinceResultsMainPanel.propTypes = {\n    name: PropTypes.string,\n    showResults: PropTypes.bool,\n    registerContent: PropTypes.array,\n    kappaResult: PropTypes.array,\n    kappaProResult: PropTypes.array,\n    contingencyMatrix: PropTypes.array,\n    currentAction: PropTypes.object,\n};\n\nLinceResultsMainPanel.defaultProps = {\n    showResults: false,\n    content: []\n};\nexport default (LinceResultsMainPanel);\n","import React, {Component} from 'react';\nimport PropTypes from \"prop-types\";\nimport LinceResultsMainPanel from \"./LinceResultsMainPanel\";\nimport {connect} from 'react-redux';\nimport {Button, Card, Col, Row} from \"antd\";\nimport {\n    fetchContingencyMatrix,\n    fetchKappaIndex,\n    fetchKappaProIndex,\n    fetchProfileInfo,\n    fetchKrippendorfIndex,\n    fetchRegisterById\n} from '../../redux/lince/videoActions';\nimport ShowNotification, {showError} from \"../utility/ShowNotification\";\nimport IsoWidgetsWrapper from \"@iso/containers/Widgets/WidgetsWrapper\";\nimport StickerWidget from \"@iso/containers/Widgets/Sticker/StickerWidget\";\nimport StyledResizable from \"./StyledResizable\";\n\nclass LinceResultsObserverSelector extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {expanded: false};\n        this._onExpand = this._onExpand.bind(this);\n        this.onExpand = this.props.onExpand.bind(this);\n    }\n\n    _onExpand() {\n        const nextValue = !this.state.expanded;\n        this.setState({expanded: nextValue});\n        this.onExpand();\n    }\n\n    render() {\n        const white = '#ffffff';\n        const green = '#7ED320';\n        const fontColor = this.state.expanded ? white : green;\n        const bgColor = this.state.expanded ? green : white;\n        const title = 'Observer ' + this.props.user ? this.props.user.userName : '- No name - ';\n        const icon = this.state.expanded ? 'ion-person' : 'ion-person-add';\n        const text = <><span>{title}</span>\n            <Button onClick={this._onExpand} type=\"dashed\" size={\"small\"} style={{float: \"right\"}}>Select</Button>\n        </>\n        return (\n            <Row gutter={0} justify=\"center\">\n                <Col md={24} style={{paddingTop: \"5px\"}}>\n                    <IsoWidgetsWrapper onClick={this._onExpand} style={{cursor: \"pointer\"}}>\n                        {/* Sticker Widget */}\n                        <StickerWidget number={this.props.user.registerAmount + \" scenes\"}\n                                       text={text}\n                                       icon={icon}\n                                       fontColor={fontColor}\n                                       bgColor={bgColor}\n                        />\n                    </IsoWidgetsWrapper>\n                </Col>\n                {/*    <Col md={8} style={{paddingTop: \"15px\"}}>\n                    <Button onClick={this._onExpand}>Select</Button>\n                </Col>*/}\n            </Row>\n            /*   <Card style={{marginTop: 5}} type=\"inner\" title={title}\n                     className={expanded}\n                     extra={<a className={selected} onClick={this._onExpand}>Select</a>}>\n                   <p>\n                       {this.props.user.registerAmount}&#160;\n                       <Trans i18nKey=\"results.scenesWithoutMarks\">Scenes registered.</Trans>\n                   </p>\n               </Card>*/\n        );\n    }\n}\n\nLinceResultsObserverSelector.propTypes = {\n    user: PropTypes.object.isRequired,\n    onExpand: PropTypes.func\n};\n\nclass LinceResultsKappaLauncher extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {users: [], currentUser: \"\", showResults: false};\n        this.fetchRegisterById = this.props.fetchRegisterById.bind(this);\n        this._onExpand = this._onExpand.bind(this);\n        this._onActionRequest = this._onActionRequest.bind(this);\n    }\n\n    componentWillMount() {\n        this.props.fetchProfileInfo();\n    }\n\n    _onActionRequest() {\n        //console.log(this.props.currentAction);\n        //const resultsPanelComponent = this.refs[\"resultsPanel\"];\n        let selected = [];\n        this.props.profile.userProfiles.forEach(i => {\n            let currentStatusActive = this.refs[\"item-\" + i.key].state.expanded;\n            if (currentStatusActive) {\n                selected.push(i.registerCode);\n            }\n        });\n        if (selected.length === 2) {\n            //console.log(selected);\n            ShowNotification('Observers', 'Se está calculando el índice Kappa de los registros seleccionados');\n            this.setState({showResults: true});\n            if (this.props.currentAction.key === \"kappa\") {\n                this.props.fetchKappaIndex(selected[0], selected[1]);\n            }\n            if (this.props.currentAction.key === \"kappa-pro\") {\n                this.props.fetchKappaProIndex(selected[0], selected[1]);\n            }\n            if (this.props.currentAction.key === \"matrix\") {\n                this.props.fetchContingencyMatrix(selected[0], selected[1]);\n            }\n        } else {\n            showError('', <p>Debes seleccionar 2 registros para poder lanzar los índices kappa.<br/>\n                Los registros seleccionados tienen el botón de color verde y el observador como destacado</p>);\n        }\n    }\n\n    _onExpand(u) {\n        //console.log(u);\n        this.props.fetchRegisterById(u.registerCode);\n        this.setState({currentUser: u.userName, showResults: false});\n    }\n\n    render() {\n        let users = [];\n        if (this.props.profile.userProfiles) {\n            users = this.props.profile.userProfiles;\n        }\n        console.log(this.props.kappaProIndex);\n        return (\n            <Row>\n                <Col md={24} sm={24} xs={24}>\n                    <div style={{display: 'flex', width: '100%', height: '100%'}}>\n                        <StyledResizable defaultSize={{width: '35%', height: '100%'}}\n                                         minWidth=\"300\"\n                                         minHeight=\"600\">\n                            <Card title=\"Participants of the project\">\n                                <Card type=\"inner\">\n                                    <div>\n                                        <Row>\n                                            <Col md={20}>\n                                                <p>Found {users.length}\n                                                    participants.{/*Se han encontrado {users.length} participantes.*/}</p>\n                                                <p>You must select two participants to calculate your Kappa index or\n                                                    contingency matrix\n                                                    {/*Debes seleccionar dos participantes para poder calcular su índice Kappa o tabla de\n                                contigencia*/}</p>\n                                                <p>Krippendorf allows you 2 or more\n                                                    observers{/*Krippendorf te permite 2 o más observadores*/}</p>\n                                            </Col>\n                                            <Col md={4}>\n                                                <Button onClick={this._onActionRequest}>\n                                                    Execute\n                                                </Button>\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                </Card>\n                                {users.map((v) =>\n                                    <LinceResultsObserverSelector key={v.key}\n                                                                  ref={\"item-\" + v.key}\n                                                                  user={v}\n                                                                  isActive={false}\n                                                                  onExpand={() => this._onExpand(v)}/>)\n                                }\n                            </Card>\n                        </StyledResizable>\n                        <div style={{width: \"100%\"}}>\n                            <LinceResultsMainPanel ref=\"resultsPanel\"\n                                                   kappaResult={this.props.kappaIndex}\n                                                   kappaProResult={this.props.kappaProIndex}\n                                                   contingencyMatrix={this.props.contingencyMatrix}\n                                                   showResults={this.state.showResults}\n                                                   currentAction={this.props.currentAction}\n                                                   name={this.state.currentUser}\n                                                   registerContent={this.props.registerTemp}/>\n                        </div>\n                    </div>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nLinceResultsKappaLauncher.propTypes = {\n    name: PropTypes.string,\n    currentAction: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired,\n    selectedUsers: PropTypes.array,\n    registerTemp: PropTypes.array,\n    kappaIndex: PropTypes.array,\n    kappaProIndex: PropTypes.array,\n    contingencyMatrix: PropTypes.array,\n    fetchProfileInfo: PropTypes.func.isRequired,\n    fetchRegisterById: PropTypes.func.isRequired,\n    fetchKappaIndex: PropTypes.func.isRequired,\n    fetchKappaProIndex: PropTypes.func.isRequired,\n    fetchContingencyMatrix: PropTypes.func.isRequired,\n};\nconst mapStateToProps = state => ({\n    profile: state.lince.profile,\n    registerTemp: state.lince.registerTemp,\n    kappaIndex: state.lince.kappaIndex,\n    kappaProIndex: state.lince.kappaProIndex,\n    contingencyMatrix: state.lince.contingencyMatrix\n});\nexport default connect(mapStateToProps, {\n    fetchProfileInfo,\n    fetchRegisterById,\n    fetchKappaIndex,\n    fetchKappaProIndex,\n    fetchContingencyMatrix\n}, null, {forwardRef: true})\n(LinceResultsKappaLauncher);","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport LinceResultsKappaLauncher from \"../../components/lince/LinceResultsKappaLauncher\";\nimport {Provider} from 'react-redux';\nimport {store} from '../../redux/store';\nimport '../../config/i18n';\nimport {Trans} from 'react-i18next';\nimport {Col, Menu, Row} from \"antd\";\nimport {LinceLayoutContent, StyledLayoutContentWrapper} from \"../../components/lince/StyledLayoutComponents\";\nimport PageHeader from \"@iso/components/utility/pageHeader\";\nimport ShowNotification from \"../../components/utility/ShowNotification\";\nimport LinceMenu from \"./styled/LinceItems\";\n/*\nGA code\n */\nimport siteConfig from '../../config/site.config';\nimport ReactGA from 'react-ga';\n\nReactGA.initialize(siteConfig.google.analyticsKey);\nReactGA.pageview(window.location.pathname + window.location.search);\n\n/*\nEnd GA code\n */\nclass ObserversApp extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {active: this.props.actions[0]};\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick = e => {\n        if (this.props.actions) {\n            let currentAction = {};\n            this.props.actions.map(i => {\n                if (i.key === e.key) {\n                    return currentAction = i;\n                }\n                return null;\n            });\n            this.setState({active: currentAction});\n            ShowNotification(currentAction.label, currentAction.info);\n        }\n        /*switch (e.key) {\n            case \"play\":\n                break;\n            default:\n                break;\n        }*/\n    }\n\n    render() {\n        let actions = this.props.actions;\n        return (<Provider store={store}>\n                <StyledLayoutContentWrapper>\n                    <LinceLayoutContent>\n                        <PageHeader>Observers: <Trans i18nKey=\"calculateResults\">Calculate results</Trans></PageHeader>\n                        <Row>\n                            <Col span={24}>\n                                <LinceMenu selectedKeys={[this.state.active.key]} onClick={this.handleClick}>\n                                    {actions.map((action) => {\n                                            return <Menu.Item key={action.key}> {action.label} </Menu.Item>\n                                        }\n                                    )}\n                                </LinceMenu>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col span={24}>\n                                <LinceResultsKappaLauncher currentAction={this.state.active}/>\n                            </Col>\n                        </Row>\n                    </LinceLayoutContent>\n                </StyledLayoutContentWrapper>\n            </Provider>\n        );\n    }\n}\n\nObserversApp.defaultProps = {\n    actions: [{\n        key: \"kappa\",\n        label: \"Conventional Kappa\",\n        info: \"El índice Kappa te permite calcular los índices kappa de forma idéntica a como se hace en la primera versión de Lince (2012). \\n Es tu responsabilidad que las escenas de observación sean idénticas.\"\n    }, {\n        key: \"kappa-pro\",\n        label: \"Fleiss Kappa\",\n        info: \"Kappa pro es el nuevo cálculo de Lince en base al agoritmo de Fleiss’s Kappa κ (1971). Sólo apto para 2 observadores. \\n Es tu responsabilidad que las escenas de observación sean idénticas.\"\n    // }, {\n    //     key: \"matrix\",\n    //     label: \"Contingency matrix\",//\"Tabla de contingencia\",\n    //     info: \"Esta funcionalidad te permitirá generar la tabla de contingencia entre 2 observadores para todos los criterios.\"\n    // }, {\n    //     key: \"krippendorf\",\n    //     label: \"Krippendorf\",\n    //     info: \"Krippendorff’s α (1980). Para 2 o más observadores. Se ofrecen cálculos de acuerdo y desacuerdo entre los observadores. \\n Es tu responsabilidad que las escenas de observación sean idénticas.\"\n    }\n    ]\n};\nObserversApp.propTypes = {\n    actions: PropTypes.array.isRequired\n};\nexport default ObserversApp;\n","import styled from 'styled-components';\n\nconst LayoutContentWrapper = styled.div`\n  padding: 40px 20px;\n  display: flex;\n  flex-flow: row wrap;\n  overflow: hidden;\n\n  @media only screen and (max-width: 767px) {\n    padding: 50px 20px;\n  }\n\n  @media (max-width: 580px) {\n    padding: 15px;\n  }\n`;\n\nexport { LayoutContentWrapper };\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n\nconst LayoutContentStyle = styled.div`\n  width: 100%;\n  padding: 35px;\n  background-color: #ffffff;\n  border: 1px solid ${palette('border', 0)};\n  height: 100%;\n`;\n\nexport default LayoutContentStyle;\n","import LayoutContentStyle from './layoutContent.style';\n\nexport default LayoutContentStyle;\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\nimport WithDirection from '@iso/lib/helpers/rtl';\nconst WDComponentTitleWrapper = styled.h1`\n  font-size: 19px;\n  font-weight: 500;\n  color: ${palette('secondary', 2)};\n  width: 100%;\n  margin-right: 10px;\n  margin-bottom: 10px;\n  display: flex;\n  align-items: center;\n  white-space: nowrap;\n\n  @media only screen and (max-width: 767px) {\n    margin: 0 10px;\n    margin-bottom: 30px;\n  }\n\n  &:before {\n    content: '';\n    width: 5px;\n    height: 40px;\n    background-color: ${palette('secondary', 3)};\n    display: flex;\n    margin: ${props =>\n      props['data-rtl'] === 'rtl' ? '0 0 0 15px' : '0 15px 0 0'};\n  }\n\n  &:after {\n    content: '';\n    width: 100%;\n    height: 1px;\n    background-color: ${palette('secondary', 3)};\n    display: flex;\n    margin: ${props =>\n      props['data-rtl'] === 'rtl' ? '0 15px 0 0' : '0 0 0 15px'};\n  }\n`;\n\nconst ComponentTitleWrapper = WithDirection(WDComponentTitleWrapper);\nexport { ComponentTitleWrapper };\n","import React from 'react';\nimport { ComponentTitleWrapper } from './pageHeader.style';\n\nexport default props => (\n  <ComponentTitleWrapper className=\"isoComponentTitle\">\n    {props.children}\n  </ComponentTitleWrapper>\n);\n","import React from 'react';\nimport styled from \"styled-components\";\nimport LayoutContent from \"@iso/components/utility/layoutContent\";\nimport {LayoutContentWrapper} from \"@iso/components/utility/layoutWrapper.style\";\nimport {Col} from \"antd\";\n\nexport function LinceLayoutContent(props) {\n    return <LayoutContent {...props} className={\"mainContent\"}/>\n}\n\nexport const StyledLayoutContentWrapper = styled(LayoutContentWrapper)`\n    padding: 5px 5px!important;  \n    .mainContent{\n        padding: 5px 5px!important;\n    }\n`;\n\n\nexport const CenteredCol = styled(Col)`\n    text-align: center;\n`","import i18n from 'i18next';\nimport Backend from 'i18next-xhr-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport {initReactI18next} from 'react-i18next';\n\ni18n\n// load translation using xhr -> see /public/locales\n// learn more: https://github.com/i18next/i18next-xhr-backend\n    .use(Backend)\n    // detect user language\n    // learn more: https://github.com/i18next/i18next-browser-languageDetector\n    .use(LanguageDetector)\n    // pass the i18n instance to react-i18next.\n    .use(initReactI18next)\n    // init i18next\n    // for all options read: https://www.i18next.com/overview/configuration-options\n    .init({\n        preload: ['es', 'en', 'de'],\n        initImmediate:false,\n        //whitelist: ['en', 'es'],\n        //nonExplicitWhitelist: false,\n        load: 'languageOnly',\n        detection: {\n            lookupQuerystring: 'lang', //will detect chosen language from user\n        },\n        fallbackLng: {\n            'es-ES': ['es'],\n            'en-US': ['en'],\n            'de-DE': ['de'],\n            default: ['es'],\n        },\n        //fallbackLng: 'en',\n        debug: true,\n        react: {\n            wait: true,\n            bindI18n: 'languageChanged loaded',\n        },\n        interpolation: {\n            escapeValue: false, // not needed for react as it escapes by default\n        },\n    });\n\nexport default i18n;\n","import React from 'react';\nimport {Resizable} from 're-resizable';\nconst style = {\n    zIndex:\"9999!important\",\n    borderRight: 'solid 5px #ddd',\n    margin: '5px 5 5 5'\n}\nexport default function StyledResizable(props) {\n    return <Resizable {...props} style={style}/>\n}\n","import styled from 'styled-components';\nimport { borderRadius } from '@iso/lib/helpers/style_utils';\n\nconst StickerWidgetWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: stretch;\n  overflow: hidden;\n  ${borderRadius('5px')};\n\n  .isoIconWrapper {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 80px;\n    flex-shrink: 0;\n    background-color: rgba(0, 0, 0, 0.1);\n\n    i {\n      font-size: 30px;\n    }\n  }\n\n  .isoContentWrapper {\n    width: 100%;\n    padding: 20px 15px 20px 20px;\n    display: flex;\n    flex-direction: column;\n\n    .isoStatNumber {\n      font-size: 20px;\n      font-weight: 500;\n      line-height: 1.1;\n      margin: 0 0 5px;\n    }\n\n    .isoLabel {\n      font-size: 16px;\n      font-weight: 400;\n      margin: 0;\n      line-height: 1.2;\n    }\n  }\n`;\n\nexport { StickerWidgetWrapper };\n","import React from 'react';\nimport { StickerWidgetWrapper } from './StickerWidget.styles';\n\nexport default function({ fontColor, bgColor, width, icon, number, text }) {\n  const textColor = {\n    color: fontColor,\n  };\n  const widgetStyle = {\n    backgroundColor: bgColor,\n    width: width,\n  };\n  const iconStyle = {\n    color: fontColor,\n  };\n\n  return (\n    <StickerWidgetWrapper className=\"isoStickerWidget\" style={widgetStyle}>\n      <div className=\"isoIconWrapper\">\n        <i className={icon} style={iconStyle} />\n      </div>\n\n      <div className=\"isoContentWrapper\">\n        <h3 className=\"isoStatNumber\" style={textColor}>\n          {number}\n        </h3>\n        <span className=\"isoLabel\" style={textColor}>\n          {text}\n        </span>\n      </div>\n    </StickerWidgetWrapper>\n  );\n}\n"],"sourceRoot":""}