{"version":3,"sources":["components/lince/LincePieChart.js","components/lince/LinceSceneChart.js","containers/Lince/Results.js","../../../shared/components/utility/layoutWrapper.style.js","../../../shared/components/utility/layoutContent.style.js","../../../shared/components/utility/layoutContent.js","../../../shared/components/utility/box.style.js","../../../shared/assets/styles/constants.js","../../../shared/components/utility/boxTitle.style.js","../../../shared/components/utility/boxTitle.js","../../../shared/components/utility/pageHeader.style.js","../../../shared/components/utility/pageHeader.js","components/lince/StyledLayoutComponents.js","components/lince/StyledResizable.js","components/utility/FullscreenBox.js"],"names":["LinceInnerChartStyled","styled","div","_templateObject","_taggedTemplateLiteral","createTheme","text","primary","secondary","background","default","context","divider","action","button","hover","disabled","LinceExpandedComponent","_ref","data","customPieChart","chart","plotBackgroundColor","plotBorderWidth","plotShadow","type","title","concat","name","tooltip","pointFormat","plotOptions","pie","allowPointSelect","cursor","dataLabels","enabled","format","style","color","Highcharts","theme","contrastTextColor","series","pieData","serie","forEach","aux","push","y","pieDataRoot","colorByPoint","React","createElement","HighchartsReact","highcharts","options","DataTable","noHeader","dense","columns","selector","id","d","toFixed","LincePieChart","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","_getRowInfo","bind","_assertThisInitialized","_createClass","key","value","this","fetchGraphPie","console","log","_this2","criteria","Object","keys","k","i","row","className","sortable","expandableRows","highlightOnHover","defaultSortField","expandableRowsComponent","Component","connect","store","lince","forwardRef","LinceSceneChart","fetchGraphChart","yAxisTimeDataLabels","ySeriesLabels","item","index","values","zoomType","subtitle","xAxis","categories","xSeriesLabels","yAxis","labels","formatter","plotLines","width","tickInterval","valueSuffix","legend","layout","align","verticalAlign","borderWidth","spline","marker","radius","lineColor","lineWidth","ref","ReactGA","initialize","siteConfig","google","analyticsKey","pageview","window","location","pathname","search","StyledLayout","LayoutContent","dispatch","useDispatch","rowStyle","basicStyle","colStyle","gutter","useEffect","fetchSessionParameters","Provider","StyledLayoutContentWrapper","LinceLayoutContent","PageHeader","IntlMessages","_Row","justify","_Col","md","sm","xs","display","height","StyledResizable","defaultSize","minWidth","minHeight","FullscreenBox","LayoutContentWrapper","LayoutContentStyle","palette","BoxWrapper","flexFlow","marginBottom","BoxTitle","h3","BoxSubTitle","p","_templateObject2","WDComponentTitleWrapper","h1","ComponentTitleWrapper","WithDirection","children","assign","CenteredCol","zIndex","borderRight","margin","Resizable","icon","collapsed","useSelector","App","_useState","useState","_useState2","_slicedToArray","fullscreen","setFullscreen","paddingLeft","paddingTop","_Button","shape","FullscreenExitOutlined","onClick","FullscreenOutlined","ReactFullScreenElement","allowScrollbar","fullScreen","BoxTitleWrapper","Fragment"],"mappings":"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","file":"static/js/31.4feb1611.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {fetchGraphPie} from '../../redux/lince/videoActions';\nimport PropTypes from \"prop-types\";\nimport 'react-table/react-table.css';\nimport styled from \"styled-components\";\nimport DataTable,{ createTheme } from \"react-data-table-component\";\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\n/***\n Basado en el repositorio oficial de highcharts\n https://github.com/highcharts/highcharts-react\n */\nconst LinceInnerChartStyled = styled.div`\n  padding: 2px;\n  display: block;\n  width: 100%;\n  p {\n    font-size: 16px;\n    font-weight: 700;\n    word-break: break-all;\n  }\n`;\n\ncreateTheme('solarized', {\n    text: {\n        primary: '#c6d9e2',\n        secondary: '#2aa198',\n    },\n    background: {\n        default: '#2d3446',\n    },\n    context: {\n        background: '#cb4b16',\n        text: '#FFFFFF',\n    },\n    divider: {\n        default: '#073642',\n    },\n    action: {\n        button: 'rgba(0,0,0,.54)',\n        hover: 'rgba(0,0,0,.08)',\n        disabled: 'rgba(0,0,0,.12)',\n    },\n});\nconst LinceExpandedComponent = ({data}) => {\n    const columns = [\n        {name: \"Nombre\", selector: \"name\"},\n        {name: \"Visualizaciones\", selector: \"total\"},\n        {id: \"Fraction\", name: \"% sobre el total\", selector: \"y\", format: d => `${(d.y).toFixed(2)} %`}\n    ];\n    let customPieChart = {\n        chart: {\n            plotBackgroundColor: null,\n            plotBorderWidth: null,\n            plotShadow: false,\n            type: 'pie'\n        },\n        title: {\n            text: `Visualizaciones del criterio ${data.name}`\n        },\n        tooltip: {\n            pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n        },\n        plotOptions: {\n            pie: {\n                allowPointSelect: true,\n                cursor: 'pointer',\n                dataLabels: {\n                    enabled: true,\n                    format: '<b>{point.name}</b>: {point.percentage:.1f} %',\n                    style: {\n                        color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'\n                    }\n                }\n            }\n        },\n        series: []\n    };\n    let pieData = [];\n    data.serie.forEach(aux => {\n        pieData.push({name: aux.name, y: aux.y});\n    });\n    const pieDataRoot = {name: data.name, colorByPoint: true, data: pieData};\n    customPieChart.series = [pieDataRoot];\n    return (\n        <LinceInnerChartStyled>\n            <HighchartsReact highcharts={Highcharts} options={customPieChart}/>\n            <DataTable noHeader dense columns={columns} data={data.serie}   theme=\"solarized\"/>\n        </LinceInnerChartStyled>\n    );\n};\n\nclass LincePieChart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this._getRowInfo = this._getRowInfo.bind(this);\n    }\n\n    componentDidMount() {\n        this.props.fetchGraphPie();\n    }\n\n    _getRowInfo(name) {\n        console.log(name);\n    }\n\n    render() {\n        let masterColumns = [{name: 'Name', selector: 'name', sortable: true,}\n            , {name: 'Total', selector: 'total', sortable: true}\n            , {name: 'Porcentaje', selector: 'y', sortable: true, format: d => `${(d.y).toFixed(2)} %`}];\n        //Las introducimos dentro\n        let data = this.props.pie.criteria;\n        Object.keys(this.props.pie).forEach((k, i) => {\n            if (k !== \"criteria\") {\n                data.forEach(row => {\n                    if (row.name === k) {\n                        row.serie = this.props.pie[k];\n                    }\n                });\n            }\n        });\n        return (\n            <div className={\"row\"}>\n                <div className={\"col-md-12\"}>\n                    <DataTable\n                        title=\"Register summary\"\n                        columns={masterColumns}\n                        data={data}\n                        expandableRows\n                        highlightOnHover\n                        defaultSortField=\"name\"\n                        expandableRowsComponent={<LinceExpandedComponent/>}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nLincePieChart.propTypes = {\n    pie: PropTypes.object,\n    fetchGraphPie: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = store => ({\n    pie: store.lince.pie,\n});\nexport default connect(mapStateToProps, {\n    fetchGraphPie: fetchGraphPie\n}, null, {forwardRef: true})(LincePieChart);\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {fetchGraphChart, fetchGraphPie} from '../../redux/lince/videoActions';\nimport PropTypes from \"prop-types\";\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\n/***\n Basado en el repositorio oficial de highcharts\n https://github.com/highcharts/highcharts-react\n */\n\nclass LinceSceneChart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    componentDidMount() {\n        this.props.fetchGraphChart();\n        //this.refs.sceneChart.setSize(null,null);\n    }\n\n    render() {\n        let yAxisTimeDataLabels = {};\n        if (this.props.chart.ySeriesLabels) {\n            this.props.chart.ySeriesLabels.forEach(function f(item, index) {\n                yAxisTimeDataLabels[item.key] = item.value;\n            })\n        }\n        const values = {\n            chart: {\n                type: 'spline',\n                zoomType: 'x'\n            },\n            title: {\n                text: ''\n            },\n            subtitle: {\n                text: ''\n            },\n            xAxis: {\n                categories: this.props.chart.xSeriesLabels,\n                type: 'datetime'\n            },\n            yAxis: {\n                title: {\n                    text: 'Categories'\n                },\n                labels: {\n                    formatter: function () {\n                        let value = yAxisTimeDataLabels[this.value];\n                        return value !== 'undefined' ? value : this.value;\n                    }\n                },\n                plotLines: [{\n                    value: 0,\n                    width: 1,\n                    color: '#808080'\n                }],\n                tickInterval: 1\n            },\n            tooltip: {\n                valueSuffix: 'Cat'\n            },\n            legend: {\n                layout: 'vertical',\n                align: 'right',\n                verticalAlign: 'middle',\n                borderWidth: 0\n            },\n            plotOptions: {\n                spline: {\n                    marker: {\n                        radius: 4,\n                        lineColor: '#666666',\n                        lineWidth: 1\n                    }\n                }\n            },\n            series: this.props.chart.series\n        };\n        return (\n            <HighchartsReact ref={\"sceneChart\"} highcharts={Highcharts} options={values} style={{width:\"100%\"}}/>\n        );\n    }\n}\n\nLinceSceneChart.propTypes = {\n    chart: PropTypes.object,\n    pie: PropTypes.object,\n    fetchGraphChart: PropTypes.func.isRequired,\n    fetchGraphPie: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = store => ({\n    chart: store.lince.chart,\n    pie: store.lince.pie,\n});\nexport default connect(mapStateToProps, {\n    fetchGraphChart: fetchGraphChart,\n    fetchGraphPie: fetchGraphPie\n}, null, {forwardRef: true})(LinceSceneChart);","import React, {useEffect} from 'react';\nimport {Col, Row} from 'antd';\nimport styled from 'styled-components';\nimport PageHeader from '@iso/components/utility/pageHeader';\nimport basicStyle from '@iso/assets/styles/constants';\nimport {Provider, useDispatch} from 'react-redux';\nimport {store} from '../../redux/store';\nimport LincePieChart from \"../../components/lince/LincePieChart\";\nimport LinceSceneChart from \"../../components/lince/LinceSceneChart\";\nimport LayoutContent from \"@iso/components/utility/layoutContent\";\nimport StyledResizable from \"../../components/lince/StyledResizable\";\nimport {LinceLayoutContent, StyledLayoutContentWrapper} from \"../../components/lince/StyledLayoutComponents\";\nimport {fetchSessionParameters} from \"../../redux/lince/videoActions\";\nimport FullscreenBox from \"../../components/utility/FullscreenBox\";\nimport IntlMessages from \"@iso/components/utility/intlMessages\";\n\n/*\nGA code\n */\nimport siteConfig from '../../config/site.config';\nimport ReactGA from 'react-ga';\nReactGA.initialize(siteConfig.google.analyticsKey);\nReactGA.pageview(window.location.pathname + window.location.search);\n/*\nEnd GA code\n */\nconst StyledLayout = styled(LayoutContent)`\n    padding: 5px 5px 5px 5px!important;\n`;\nexport default function () {\n    const dispatch = useDispatch();\n    const {rowStyle, colStyle, gutter} = basicStyle;\n    useEffect(() => {\n        dispatch(fetchSessionParameters());\n    }, [dispatch]);\n    return (\n        <Provider store={store}>\n            <StyledLayoutContentWrapper>\n                <LinceLayoutContent>\n                    <PageHeader><IntlMessages id=\"results\"/></PageHeader>\n                    <StyledLayout>\n                        <Row style={rowStyle} gutter={gutter} justify=\"start\">\n                            <Col md={24} sm={24} xs={24} style={colStyle}>\n                                <div style={{display: 'flex', width: '100%', height: '100%'}}>\n                                    <StyledResizable defaultSize={{width: '35%', height: '100%'}}\n                                                     minWidth=\"300\"\n                                                     minHeight=\"600\">\n                                        <FullscreenBox title={<IntlMessages id=\"quick-graph\"/>}>\n                                            <LincePieChart/>\n                                        </FullscreenBox>\n                                    </StyledResizable>\n                                    <div style={{width: \"100vw\"}}>\n                                        <FullscreenBox title={<IntlMessages id=\"time-graph\"/>}>\n                                        <LinceSceneChart/>\n                                        </FullscreenBox>\n                                    </div>\n                                </div>\n                            </Col>\n                        </Row>\n                    </StyledLayout>\n                </LinceLayoutContent>\n            </StyledLayoutContentWrapper>\n        </Provider>\n    );\n}","import styled from 'styled-components';\n\nconst LayoutContentWrapper = styled.div`\n  padding: 40px 20px;\n  display: flex;\n  flex-flow: row wrap;\n  overflow: hidden;\n\n  @media only screen and (max-width: 767px) {\n    padding: 50px 20px;\n  }\n\n  @media (max-width: 580px) {\n    padding: 15px;\n  }\n`;\n\nexport { LayoutContentWrapper };\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n\nconst LayoutContentStyle = styled.div`\n  width: 100%;\n  padding: 35px;\n  background-color: #ffffff;\n  border: 1px solid ${palette('border', 0)};\n  height: 100%;\n`;\n\nexport default LayoutContentStyle;\n","import LayoutContentStyle from './layoutContent.style';\n\nexport default LayoutContentStyle;\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n\nconst BoxWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n  background-color: #ffffff;\n  border: 1px solid ${palette('border', 0)};\n  margin: 0 0 30px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  @media only screen and (max-width: 767px) {\n    padding: 20px;\n    ${'' /* margin: 0 10px 30px; */};\n  }\n\n  &.half {\n    width: calc(50% - 34px);\n    @media (max-width: 767px) {\n      width: 100%;\n    }\n  }\n`;\n\nexport { BoxWrapper };\n","export const colors = {\n  blue: {\n    deep: 'rgb(0, 121, 191)',\n    light: 'lightblue',\n    lighter: '#d9fcff',\n    soft: '#E6FCFF',\n  },\n  black: '#4d4d4d',\n  shadow: 'rgba(0,0,0,0.2)',\n  grey: {\n    darker: '#C1C7D0',\n    dark: '#E2E4E6',\n    medium: '#DFE1E5',\n    N30: '#EBECF0',\n    light: '#F4F5F7',\n  },\n  green: 'rgb(185, 244, 188)',\n  white: 'white',\n  purple: 'rebeccapurple',\n  orange: '#FF991F',\n};\nexport const grid = 8;\n\nexport const borderRadius = 2;\nconst rowStyle = {\n  width: '100%',\n  display: 'flex',\n  flexFlow: 'row wrap',\n};\nconst colStyle = {\n  marginBottom: '16px',\n};\nconst gutter = 16;\n\nconst basicStyle = {\n  rowStyle,\n  colStyle,\n  gutter,\n};\nexport default basicStyle;\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n\nconst BoxTitle = styled.h3`\n  font-size: 14px;\n  font-weight: 500;\n  color: ${palette('text', 0)};\n  margin: 0;\n  margin-bottom: 5px;\n`;\n\nconst BoxSubTitle = styled.p`\n  font-size: 13px;\n  font-weight: 400;\n  color: ${palette('text', 3)};\n  line-height: 24px;\n`;\n\nexport { BoxTitle, BoxSubTitle };\n","import React from 'react';\nimport { BoxTitle, BoxSubTitle } from './boxTitle.style';\n\nexport default props => {\n  return (\n    <div>\n      {props.title ? (\n        <BoxTitle className=\"isoBoxTitle\"> {props.title} </BoxTitle>\n      ) : (\n        ''\n      )}\n      {props.subtitle ? (\n        <BoxSubTitle className=\"isoBoxSubTitle\"> {props.subtitle} </BoxSubTitle>\n      ) : (\n        ''\n      )}\n    </div>\n  );\n};\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\nimport WithDirection from '@iso/lib/helpers/rtl';\nconst WDComponentTitleWrapper = styled.h1`\n  font-size: 19px;\n  font-weight: 500;\n  color: ${palette('secondary', 2)};\n  width: 100%;\n  margin-right: 10px;\n  margin-bottom: 10px;\n  display: flex;\n  align-items: center;\n  white-space: nowrap;\n\n  @media only screen and (max-width: 767px) {\n    margin: 0 10px;\n    margin-bottom: 30px;\n  }\n\n  &:before {\n    content: '';\n    width: 5px;\n    height: 40px;\n    background-color: ${palette('secondary', 3)};\n    display: flex;\n    margin: ${props =>\n      props['data-rtl'] === 'rtl' ? '0 0 0 15px' : '0 15px 0 0'};\n  }\n\n  &:after {\n    content: '';\n    width: 100%;\n    height: 1px;\n    background-color: ${palette('secondary', 3)};\n    display: flex;\n    margin: ${props =>\n      props['data-rtl'] === 'rtl' ? '0 15px 0 0' : '0 0 0 15px'};\n  }\n`;\n\nconst ComponentTitleWrapper = WithDirection(WDComponentTitleWrapper);\nexport { ComponentTitleWrapper };\n","import React from 'react';\nimport { ComponentTitleWrapper } from './pageHeader.style';\n\nexport default props => (\n  <ComponentTitleWrapper className=\"isoComponentTitle\">\n    {props.children}\n  </ComponentTitleWrapper>\n);\n","import React from 'react';\nimport styled from \"styled-components\";\nimport LayoutContent from \"@iso/components/utility/layoutContent\";\nimport {LayoutContentWrapper} from \"@iso/components/utility/layoutWrapper.style\";\nimport {Col} from \"antd\";\n\nexport function LinceLayoutContent(props) {\n    return <LayoutContent {...props} className={\"mainContent\"}/>\n}\n\nexport const StyledLayoutContentWrapper = styled(LayoutContentWrapper)`\n    padding: 5px 5px!important;  \n    .mainContent{\n        padding: 5px 5px!important;\n    }\n`;\n\n\nexport const CenteredCol = styled(Col)`\n    text-align: center;\n`","import React from 'react';\nimport {Resizable} from 're-resizable';\nconst style = {\n    zIndex:\"9999!important\",\n    borderRight: 'solid 5px #ddd',\n    margin: '5px 5 5 5'\n}\nexport default function StyledResizable(props) {\n    return <Resizable {...props} style={style}/>\n}\n","import React, {useState} from 'react';\nimport BoxTitleWrapper from '@iso/components/utility/boxTitle';\nimport {BoxWrapper} from '@iso/components/utility/box.style';\nimport {FullscreenExitOutlined, FullscreenOutlined} from \"@ant-design/icons\";\nimport ReactFullScreenElement from \"react-fullscreen-element\";\nimport {Button} from \"antd\";\nimport {useSelector} from \"react-redux\";\n\n/**\n * Coge el estado de la aplicacion y añade un padding al componente fullscreen segun esté colapsada o no\n * (flipa-lo)\n * @param props\n * @returns {*}\n */\nexport default props => {\n    const {collapsed} = useSelector(state => state.App);\n    const [fullscreen, setFullscreen] = useState(false);\n    let icon, style = {};\n    if (!fullscreen) {\n        icon = <Button shape=\"circle\" icon={<FullscreenOutlined/>} onClick={() => setFullscreen(true)}/>\n    } else {\n        style = {zIndex: '9999', paddingLeft: collapsed?\"65px\":\"170px\", paddingTop: \"70px\"};\n        icon = <Button shape=\"circle\" icon={<FullscreenExitOutlined/>} onClick={() => setFullscreen(false)}/>\n    }\n    return <ReactFullScreenElement allowScrollbar={true} fullScreen={fullscreen}>\n        <div style={style}>\n            <BoxWrapper className={`${props.className ? props.className : ''} isoBoxWrapper`}\n                        style={props.style}>\n\n                <BoxTitleWrapper title={<>{icon}&#160;{props.title}</>} subtitle={props.subtitle}/>\n                {props.children}\n            </BoxWrapper>\n        </div>\n    </ReactFullScreenElement>\n}\n"],"sourceRoot":""}