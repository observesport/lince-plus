{"version":3,"sources":["components/lince/DynaRow.js","components/lince/LinceVideoTool.js","containers/Lince/Register.js","../../../shared/components/utility/layoutWrapper.style.js","../../../shared/components/utility/layoutContent.style.js","../../../shared/components/utility/layoutContent.js","../../../shared/components/uielements/styles/button.style.js","../../../shared/components/uielements/button.js","../../../shared/components/utility/layoutWrapper.js","config/i18n.js","components/lince/StyledResizable.js","components/lince/LinceRegister.js","assets/images/LinceKeys.jpg","components/lince/LinceVideoManager.js","components/lince/LinceVideoPlayer.js"],"names":["DynaRow","forwardRef","props","ref","iterate","Array","isArray","children","size","length","map","i","index","md","sm","xs","lg","key","Date","now","customColor","Meta","Panel","LinceCollapse","styled","LincePanelWrapper","LayoutContentWrapper","CategoryButton","state","active","_doSelect","bind","setStatusTo","isActive","cat","this","onSelect","category","b","setState","addClass","parent","overText","name","description","className","id","onClick","title","data-code","code","data-id","data-group","style","width","viewBox","height","x","y","Component","LinceVideoTool","canSave","moment","categories","nonCollapsed","_onSelectCategory","_handleCollapse","_renderCriteria","_unselectNotChosen","loadSceneData","getToolState","setTime","remoteSave","onSave","time","tool","forEach","v","informationNode","inputValue","refs","value","push","nodeInformation","innerCategories","k","e","console","log","aux","saveRegister","_unselectNotPersistence","t","data","clearInputs","register","status","elem","videoTime","forceAll","persistence","target","buttonIsSet","hasBeenChange","fetchTool","crit","rows","rowSize","catContainer","slice","splice","placeholder","rowItem","_splitInnerCategories","innerButtonRow","_renderButtonRows","persistancePin","justify","span","marginTop","innerButtons","item","toolDataRender","toolData","collapseActions","collapseSize","arrkeys","defaultActiveKey","activeKey","onChange","panelKey","header","_renderCollapsableCriteria","menu","Item","overlay","preventDefault","href","DownOutlined","scrollbarStyles","borderRadius","type","aria-hidden","paddingLeft","marginBottom","speed","contentClassName","horizontal","verticalScrollbarStyle","verticalContainerStyle","smoothScrolling","defaultProps","connect","store","lince","ReactGA","initialize","siteConfig","google","analyticsKey","pageview","window","location","pathname","search","VideoApp","date","_doRegisterPlay","_doSave","o","innerPlayer","doPlayScene","linceTool","getCurrentTime","_doPlay","display","StyledResizable","defaultSize","minWidth","minHeight","LinceVideoPlayer","LinceRegister","onPlayRegister","div","LayoutContentStyle","palette","ComponentName","AntButton","transition","isoButton","WithDirection","AntButtonGroup","ButtonsGroup","Group","i18n","use","Backend","LanguageDetector","initReactI18next","init","preload","initImmediate","load","detection","lookupQuerystring","fallbackLng","default","debug","react","wait","bindI18n","interpolation","escapeValue","zIndex","borderRight","margin","selected","clearSelection","_deleteScene","_playScene","sceneWrapper","row","deleteRegister","forceUpdate","setTimeout","fetchRegister","_isMounted","columns","i18nKey","sortable","cell","selector","format","d","UserSeconds","hide","fullMode","currentId","currentRegister","substring","parse","saveDate","selectedId","conditionalRowStyles","when","backgroundColor","color","cursor","noHeader","dense","fixedHeader","defaultSortField","ConnectedLinceRegister","myForwardedRef","module","exports","SubMenu","LinceVideoManager","handleClick","onPlay","onPause","onStop","onSoundTo","onSync","onSetPlayBack","onResize","video","message","src","imgKeys","alt","ShowNotification","current","mode","theme","selectedKeys","selectable","Trans","icon","faBellSlash","faFilm","mute","_doVideoSync","_doPause","_doMute","_doPlayback","_doResize","_doStop","getVideoLength","fetchVideos","_applyAllVideos","player","pause","seek","currentTime","videos","getState","duration","f","isFirst","play","muted","playbackRate","url","autoPlay","playsInline","baseUrl","autoHide","vertical","rates","seconds","order","handleKeys","keyboard","onKeyEvent","_keyboardActions","_renderVideo"],"mappings":"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","file":"static/js/25.465b130e.chunk.js","sourcesContent":["import React, {forwardRef} from 'react';\r\nimport {Col, Row} from 'antd';\r\n\r\n/**\r\n * Tricky component to repair non col size info in ant design\r\n * Supports forwarding refs into the row\r\n *\r\n * @author Alberto Soto\r\n * @type {React.ComponentType<{} & React.ClassAttributes<unknown>>}\r\n */\r\nconst DynaRow = forwardRef((props, ref) => {\r\n    const iterate = Array.isArray(props.children);\r\n    const size = iterate?(24 / props.children.length) % 24:24;\r\n    return (\r\n        <Row ref={ref}>\r\n            {iterate ? props.children.map((i, index) => {\r\n                return <Col md={size} sm={size} xs={size} lg={size} key={`dynarow_${index}_${Date.now()}`}>\r\n                    {i}\r\n                </Col>\r\n            }) : <Col md={size} sm={size} xs={size} lg={size}>{props.children}</Col>}\r\n        </Row>\r\n\r\n    );\r\n});\r\nexport default DynaRow;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {fetchTool, saveRegister} from '../../redux/lince/videoActions';\r\nimport PropTypes from \"prop-types\";\r\nimport {Card, Col, Collapse, Dropdown, Menu, Row} from 'antd';\r\nimport Button from '@iso/components/uielements/button';\r\nimport LayoutContent from \"@iso/components/utility/layoutContent\";\r\nimport LayoutContentWrapper from '@iso/components/utility/layoutWrapper';\r\nimport DynaRow from \"./DynaRow\";\r\nimport styled from \"styled-components\";\r\nimport {DownOutlined} from '@ant-design/icons';\r\nimport IntlMessages from \"@iso/components/utility/intlMessages\";\r\nimport ScrollArea from \"react-scrollbar\";\r\nimport \"../../assets/styles/scrollarea.css\";\r\n/*\r\nno redux functional way here\r\nimport {  useSelector } from 'react-redux';\r\nconst customizedTheme = useSelector(\r\n    state => state.ThemeSwitcher.sidebarTheme\r\n);\r\n*/\r\nconst customColor = {\r\n    textColor: \"white\",\r\n    bgColor: \"#2d3446\"\r\n};\r\n//const {Title} = Typography;\r\nconst {Meta} = Card;\r\nconst {Panel} = Collapse;\r\nconst LinceCollapse = styled(Collapse)`\r\n.ant-collapse-content>.ant-collapse-content-box {\r\n    padding:2px\r\n}\r\n.ant-collapse-header {    \r\n    padding: 5px 5px 5px 40px!important;\r\n}\r\n`;\r\nconst LincePanelWrapper = styled(LayoutContentWrapper)` \r\n    //this one is important\r\n    width:100%;\r\n    padding: 0px 0 0 0;\r\n    .ant-row > div {    \r\n        margin-bottom: 5px;\r\n    }\r\n    .ant-card-body, .minPadding {\r\n        padding: 5px;\r\n    }  \r\n    .ant-card-meta{\r\n        border-radius: 5px;  \r\n        margin-bottom:3px;\r\n        text-align:center;\r\n        background: ${customColor.bgColor};\r\n        color: ${customColor.textColor};\r\n    }\r\n    .linceFont{\r\n        color: ${customColor.textColor};\r\n    }    \r\n    .hidden{\r\n        display:none;\r\n    }\r\n    /* START botonera flex */\r\n    .lince-flex-container {\r\n      display: flex;\r\n      flex-wrap: nowrap;      \r\n    }\r\n    .lince-flex-container > div {\r\n      background-color: #f1f1f1;\r\n      width: 100%;\r\n      padding:2px;\r\n      margin: 2px;\r\n      text-align: center;      \r\n    }\r\n    /* END botonera flex */\r\n    .lince-flex-container > div.bg-yellow-crusta.bg-font-yellow-crusta {\r\n        background: ${customColor.bgColor};\r\n    }\r\n    //uau! en svg se tiene que usar la propiedad fill\r\n    .lince-flex-container > div.bg-yellow-crusta.bg-font-yellow-crusta text{        \r\n        fill: ${customColor.textColor};\r\n    }\r\n`;\r\n\r\nclass CategoryButton extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {active: false};\r\n        this._doSelect = this._doSelect.bind(this);\r\n        this.setStatusTo = this.setStatusTo.bind(this);\r\n        this.isActive = this.isActive.bind(this);\r\n    }\r\n\r\n    _doSelect(cat) {\r\n        //console.log(this.props.category);\r\n        this.props.onSelect(this.props.category);\r\n    }\r\n\r\n    setStatusTo(b) {\r\n        this.setState({active: b});\r\n    }\r\n\r\n    isActive() {\r\n        return this.state.active;\r\n    }\r\n\r\n    render() {\r\n        const cat = this.props.category;\r\n        const baseClass = \"icon-btn btn-cri cat-group-\" + cat.parent;\r\n        const addClass = baseClass + (this.state.active ? \" bg-yellow-crusta bg-font-yellow-crusta\" : \"\");\r\n        const overText = cat.name + (cat.description ? \": \" + cat.description : \"\");\r\n        return (\r\n            <div className={addClass}>\r\n                <a key={cat.id} className={addClass} onClick={(cat) => this._doSelect(cat)}\r\n                    /*id={cat.id}*/\r\n                   title={overText}\r\n                    /*href={`#${cat.id}`}*/\r\n                   data-code={cat.code} data-id={cat.id} data-group={cat.name} style={{width: \"100%\"}}>\r\n                    <svg viewBox=\"0 0 50 50\" width=\"100%\" height=\"40\">\r\n                        <text x=\"0\" y=\"32\">{cat.code}</text>\r\n                        {/*transform=\"rotate(45 30,20)\"*/}\r\n                    </svg>\r\n                </a>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nCategoryButton.propTypes = {\r\n    category: PropTypes.object,\r\n    onSelect: PropTypes.func,\r\n};\r\n\r\nclass LinceVideoTool extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {canSave: false, moment: 0.1, categories: [], nonCollapsed: []};//lo situamos por defecto al inicio\r\n        this._onSelectCategory = this._onSelectCategory.bind(this);\r\n        this._handleCollapse = this._handleCollapse.bind(this);\r\n\r\n        this._renderCriteria = this._renderCriteria.bind(this);\r\n        this._unselectNotChosen = this._unselectNotChosen.bind(this);\r\n        this.loadSceneData = this.loadSceneData.bind(this);\r\n        this.getToolState = this.getToolState.bind(this);\r\n        this.setTime = this.setTime.bind(this);\r\n        this.remoteSave = this.remoteSave.bind(this);\r\n        this.onSave = this.props.onSave.bind(this);\r\n    }\r\n\r\n    //Este debe notificar a false a los que no son persistence\r\n    remoteSave(time) {\r\n        let categories = [];//{code:cat.code}\r\n        //recorremos todos los componentes y añadimos los que están activos al array\r\n        this.props.tool.forEach((v) => {\r\n            try {\r\n                if (v.informationNode) {\r\n                    //key={crit.id + \"-row-info\"}\r\n                    const inputValue = this.refs[v.id + \"-row-info\"].value;\r\n                    categories.push({id: v.id, code: v.code + \"-DATA\", nodeInformation: inputValue});\r\n                } else {\r\n                    v.innerCategories.forEach((k) => {\r\n                        if (this.refs[k.id + \"cat\" + k.code].state.active) {\r\n                            categories.push({id: k.id, code: k.code});\r\n                        }\r\n                    });\r\n                }\r\n            } catch (e) {\r\n                console.log(`No criteria value for id ${v.id}, code ${v.code} & name ${v.name}`);\r\n            }\r\n        });\r\n        this.setTime(time);\r\n        this.setState({categories: categories});\r\n        let aux = {moment: time, categories: categories};\r\n        this.props.saveRegister(aux);\r\n        this._unselectNotPersistence();\r\n    }\r\n\r\n    clearInputs() {\r\n        this.props.tool.forEach((t) => {\r\n            try {\r\n                if (t.informationNode) {\r\n                    this.refs[t.id + \"-row-info\"].value = \"\";\r\n                }\r\n            } catch (e) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    loadSceneData(data) {\r\n        console.log(data);\r\n        //para todos los registros\r\n        this.clearInputs();\r\n        this._unselectNotPersistence(true);\r\n        data.register.forEach((register) => {\r\n            //recorremos la herramienta\r\n            this.props.tool.forEach((t) => {\r\n                try {\r\n                    if (t.id && register.parent === t.id) {\r\n                        if (t.informationNode) {\r\n                            // console.log(t);\r\n                            // console.log(\"tocado:\"+ textValue);\r\n                            this.refs[t.id + \"-row-info\"].value = register.nodeInformation;\r\n                        } else {\r\n                            //hacemos el set de esa fila para cada boton: activo o no\r\n                            t.innerCategories.forEach((cat) => {\r\n                                const status = (register.code === cat.code);\r\n                                const elem = this.refs[cat.id + \"cat\" + cat.code];\r\n                                if (elem) {\r\n                                    elem.setStatusTo(status);\r\n                                    this.setState({[cat.parent]: cat.code});\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    console.log(\"loading rule err \" + e);\r\n                }\r\n\r\n            });\r\n        });\r\n        this.setTime(data.videoTime);\r\n    }\r\n\r\n    setTime(time) {\r\n        this.setState({moment: time});\r\n    }\r\n\r\n    /**\r\n     * Unchecks all items that are not persistant\r\n     * @private\r\n     */\r\n    _unselectNotPersistence(forceAll=false) {\r\n        this.props.tool.forEach((v) => {\r\n            /*      console.log(\"unselected\");\r\n                  console.log(v);*/\r\n            if (v.persistence === false || forceAll) {\r\n                v.innerCategories.forEach((k) => {\r\n                    const elem = this.refs[k.id + \"cat\" + k.code];\r\n                    if (elem) {\r\n                        elem.setStatusTo(false);\r\n                    }\r\n                });\r\n                if (v.informationNode) {\r\n                    const elem = this.refs[v.id + \"-row-info\"];\r\n                    if (elem) {\r\n                        elem.value = \"\";\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    _unselectNotChosen(parent, target) {\r\n        //console.log(\"unselectnotchosen init:\" + target);\r\n        let buttonIsSet = true;\r\n        this.props.tool.forEach((v) => {\r\n            if (v.id && parent === v.id) {\r\n                v.innerCategories.forEach((k) => {\r\n                    let status = (target === k.code);\r\n                    if (status) {\r\n                        //console.log(\"encontrado\" + k.code);\r\n                        if (this.refs[k.id + \"cat\" + k.code].isActive()) {\r\n                            //Se tiene que desactivar\r\n                            status = false;\r\n                            buttonIsSet = false;\r\n                        }\r\n                    }\r\n                    this.refs[k.id + \"cat\" + k.code].setStatusTo(status);\r\n                    /*     if (k.informationNode) {\r\n                             this.refs[k.id + \"-row-info\"].value = \"\";\r\n                         }*/\r\n                });\r\n\r\n            }\r\n        });\r\n        return buttonIsSet;\r\n    }\r\n\r\n    _onSelectCategory(cat) {\r\n        //this.setState({[cat.parent]: cat.code}); Puede ser asyncrono\r\n        // https://reactjs.org/docs/state-and-lifecycle.html\r\n        //console.log(cat);\r\n        this.setState((state, props) => {\r\n            //La clave esta aqui. Si cat.code es null no seleccionará ninguno\r\n            const hasBeenChange = this._unselectNotChosen(cat.parent, cat.code);\r\n            //console.log(\"click:\" + JSON.stringify({[cat.parent]: hasBeenChange ? cat.code : \"\"}));\r\n            return {[cat.parent]: hasBeenChange ? cat.code : \"\"}\r\n        });\r\n        this.setState({canSave: true});\r\n    }\r\n\r\n    getToolState() {\r\n        console.log(this.state);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchTool();\r\n    }\r\n\r\n    /**\r\n     * Clones the initial array of data, and sends a new set matrix with custom size\r\n     * Funny way to split a component by row in React.\r\n     * Crazy!\r\n     * @param crit criteria\r\n     * @returns {Array} matrix of innerCategories\r\n     * @private\r\n     */\r\n    _splitInnerCategories(crit) {\r\n        let rows = [], size = this.props.rowSize;\r\n        const catContainer = crit.innerCategories.slice();//gens new copy, not reference\r\n        /*   console.log(\"------- init\");\r\n           console.log(crit);\r\n           console.log(catContainer);*/\r\n        //let's consume the copy\r\n        while (catContainer.length > 0) {\r\n            rows.push(catContainer.splice(0, size));\r\n        }\r\n        /*   console.log(catContainer);\r\n           console.log(\"------- end\");*/\r\n        //console.log(rows);\r\n        return rows;\r\n    }\r\n\r\n    _renderButtonRows(crit, rows) {\r\n        if (crit.informationNode) {\r\n            return (<DynaRow>\r\n                <input ref={crit.id + \"-row-info\"} key={crit.id + \"-row-info\"} className={\"ant-input \"}\r\n                       placeholder=\"Enter text\"/>\r\n            </DynaRow>);\r\n        } else {\r\n            return (<>{\r\n                    rows.map((rowItem, index) => {\r\n                        return <div className={\"lince-flex-container\"} key={crit.id + \"-row\" + index}>\r\n                            {\r\n                                rowItem.map((cat) => {\r\n                                    return <CategoryButton category={cat} ref={cat.id + \"cat\" + cat.code}\r\n                                                           key={cat.id + \"cat\" + cat.code}\r\n                                                           onSelect={(cat) => this._onSelectCategory(cat)}/>\r\n                                })\r\n                            }\r\n                        </div>\r\n                    })\r\n                }</>\r\n            );\r\n        }\r\n    }\r\n\r\n    //m-grid-responsive-xs\r\n    _renderCriteria(crit) {\r\n        let rows = this._splitInnerCategories(crit);\r\n        let innerButtonRow = this._renderButtonRows(crit, rows);//<div className=\"m-grid-row\"></div>\r\n        let persistancePin = \"\";\r\n        if (crit.persistence)\r\n            persistancePin = <i className=\"ion-pin\"/>;\r\n        return (\r\n            <Row className=\"center-block\" key={\"cri\" + crit.id} justify=\"space-around\">\r\n                <Col span={24}>\r\n                    <Card style={{width: \"100%\", marginTop: 5}}>\r\n                        <Meta\r\n                            title={<h3 className={\"linceFont\"}>{`${crit.name} `}{persistancePin}</h3>}/>\r\n                        {innerButtonRow}\r\n                    </Card>\r\n                    {/* ${crit.code} -  <h4 className=\"text-center bg-yellow-gold bg-font-yellow-gold\">\r\n                            <span>{crit.name}</span>\r\n                            {persistancePin}\r\n                        </h4>*/}\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n\r\n    /**\r\n     * Render buttons with adjusting rows to content. Quite tricky\r\n     * @param crit\r\n     * @returns {XML}\r\n     * @private\r\n     */\r\n    _renderCollapsableCriteria(crit) {\r\n        let rows = this._splitInnerCategories(crit);\r\n        let innerButtons = this._renderButtonRows(crit, rows);\r\n        return (\r\n            <div key={\"cri\" + crit.id}>\r\n                {innerButtons}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    _handleCollapse(item) {\r\n        this.setState({nonCollapsed: item});\r\n    }\r\n\r\n    render() {\r\n        const toolData = this.props.tool;\r\n        const showButton = \"pull-left \" + this.state.canSave ? \"\" : \"hidden\";\r\n        let toolDataRender, collapseActions = \"\";\r\n        if (toolData.length > this.props.collapseSize) {\r\n            let arrkeys = [];\r\n            toolDataRender = (<LinceCollapse defaultActiveKey={['1']} activeKey={this.state.nonCollapsed}\r\n                                             onChange={this._handleCollapse}>\r\n                {toolData.map((v) => {\r\n                    let persistancePin = \"\";\r\n                    const panelKey = `panel_${v.id}`;\r\n                    arrkeys.push(panelKey);\r\n                    if (v.persistence)\r\n                        persistancePin = <i className=\"ion-pin\"/>;\r\n                    return <Panel header={<span>{persistancePin} {v.name}</span>} key={panelKey}>\r\n                        {this._renderCollapsableCriteria(v)}\r\n                    </Panel>\r\n                })}\r\n            </LinceCollapse>);\r\n            const menu = (\r\n                <Menu>\r\n                    <Menu.Item>\r\n                        <Button onClick={() => this.setState({nonCollapsed: arrkeys})}>\r\n                            Desplegar todos\r\n                        </Button>\r\n                    </Menu.Item>\r\n                    <Menu.Item>\r\n                        <Button onClick={() => this.setState({nonCollapsed: []})}>Cerrar todos</Button>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            );\r\n            collapseActions = <Dropdown overlay={menu}>\r\n                <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()} href={\"#\"}>\r\n                    Acciones <DownOutlined/>\r\n                </a>\r\n            </Dropdown>\r\n        } else {\r\n            toolDataRender = toolData.map((v) => this._renderCriteria(v))\r\n        }\r\n        const scrollbarStyles = {borderRadius: 5};\r\n        return (\r\n            <LincePanelWrapper>\r\n                <LayoutContent className={\"minPadding\"}>\r\n                    <Row>\r\n                        <Col md={5} xs={7}>\r\n                            <Button type=\"primary\" className={`isoAddNoteBtn ${showButton}`} size={\"small\"}\r\n                                    onClick={() => this.onSave()}>\r\n                        <span className=\"label label-warning\">\r\n                            <i className=\"fa fa-floppy-o\" aria-hidden=\"true\"/>&#160;\r\n                            {/* <Trans i18nKey=\"save\">Save</Trans>*/}\r\n                            <IntlMessages id=\"save\"/>\r\n                        </span>\r\n                            </Button>\r\n                        </Col>\r\n                        <Col md={14} xs={10}>\r\n                            {/*<h2><Trans i18nKey=\"video.headerTool\">Criteria & Categories</Trans></h2>*/}\r\n                            <h2 style={{paddingLeft: \"12px\"}}><IntlMessages id=\"criteria-&-categories\"/></h2>\r\n                        </Col>\r\n                        <Col md={5} xs={7}>\r\n                            {collapseActions}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={24} style={{marginTop: \"5px\", marginBottom: \"5px\"}}>\r\n                            <ScrollArea speed={0.8} className=\"area\" contentClassName=\"content\" horizontal={false}\r\n                                        verticalScrollbarStyle={scrollbarStyles}\r\n                                        verticalContainerStyle={scrollbarStyles}\r\n                                        smoothScrolling={true}>\r\n                                {toolDataRender}\r\n                            </ScrollArea>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={12}>\r\n                            <Button type=\"primary\" className={`isoAddNoteBtn ${showButton}`} size={\"large\"}\r\n                                    onClick={() => this.onSave()}>\r\n                        <span className=\"label label-warning\">\r\n                        <i className=\"fa fa-floppy-o\" aria-hidden=\"true\"/>&#160;\r\n                            {/*<Trans i18nKey=\"save\">Save</Trans>*/}\r\n                            <IntlMessages id=\"save\"/>\r\n                        </span>\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </LayoutContent>\r\n            </LincePanelWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nLinceVideoTool.defaultProps = {\r\n    collapseSize: 5,\r\n    rowSize: 6,\r\n    tool: {data: [{}]}\r\n};\r\nLinceVideoTool.propTypes = {\r\n    collapseSize: PropTypes.number.isRequired,\r\n    rowSize: PropTypes.number.isRequired,\r\n    tool: PropTypes.array.isRequired,\r\n    fetchTool: PropTypes.func.isRequired,\r\n    saveRegister: PropTypes.func.isRequired,\r\n    onSave: PropTypes.func,\r\n};\r\nconst mapStateToProps = store => ({\r\n    tool: store.lince.tool\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    fetchTool: fetchTool,\r\n    saveRegister: saveRegister\r\n}, null, {forwardRef: true})(LinceVideoTool);\r\n","import React, {Component} from 'react';\r\nimport {Provider} from 'react-redux';\r\nimport {Col, Layout, Row} from 'antd';\r\nimport {store} from '../../redux/store';\r\nimport '../../config/i18n';\r\nimport LinceVideoTool from '../../components/lince/LinceVideoTool';\r\nimport LinceRegister from '../../components/lince/LinceRegister';\r\nimport LinceVideoPlayer from '../../components/lince/LinceVideoPlayer';\r\nimport StyledResizable from \"../../components/lince/StyledResizable\";\r\n/*\r\nconst style = {\r\n    borderRight: 'solid 5px #ddd',\r\n    margin: '5px 5 5 5',\r\n};*/\r\n/*\r\nGA code\r\n */\r\nimport siteConfig from '../../config/site.config';\r\nimport ReactGA from 'react-ga';\r\nReactGA.initialize(siteConfig.google.analyticsKey);\r\nReactGA.pageview(window.location.pathname + window.location.search);\r\n/*\r\nEnd GA code\r\n */\r\nclass VideoApp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            date: new Date(),\r\n            tool: {}\r\n        };\r\n        this._doRegisterPlay = this._doRegisterPlay.bind(this);\r\n        this._doSave = this._doSave.bind(this);\r\n    }\r\n\r\n    _doRegisterPlay(o) {\r\n        /* OJO!!! Importante!!! Dark area!!! => Se debe eliminar el warning terrorifico: forwardref es para hooks\r\n        Falta info.\r\n        El componente usa connect. Por lo que no podemos acceder a la funcion directamente\r\n        usando connect(mapStateToProps, {fetchVideos},null,{ withRef: true })\r\n        genera un metodo adicional denominado getWrappedInstance para invocar metodos del componente\r\n        https://stackoverflow.com/questions/34004331/react-es6-how-to-access-child-component-functions-via-refs\r\n        https://react-redux.js.org/api/connect#forwardref-boolean\r\n         */\r\n        this.refs.innerPlayer.doPlayScene(o.videoTime);\r\n        this.refs.linceTool.loadSceneData(o);\r\n\r\n    }\r\n\r\n    _doSave() {\r\n        let time = this.refs.innerPlayer.getCurrentTime();\r\n        this.refs.linceTool.remoteSave(time);\r\n        this.refs.innerPlayer._doPlay();\r\n        //TODO no lo encuentra, pq?\r\n        //this.refs.register.clearSelection();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Provider store={store}>\r\n                <Layout>\r\n                    <div style={{display: 'flex', width: '100%', height: '100%'}}>\r\n                        <StyledResizable defaultSize={{width: '65%', height: '100%'}}\r\n                                         minWidth=\"300\"\r\n                                         minHeight=\"600\">\r\n                            <Row>\r\n                                <Col span={24}>\r\n                                    <LinceVideoPlayer ref=\"innerPlayer\"/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col span={24}>\r\n                                    <LinceRegister ref=\"register\" onPlayRegister={this._doRegisterPlay}/>\r\n                                </Col>\r\n                            </Row>\r\n                        </StyledResizable>\r\n                        <div style={{width: \"100%\"}}>\r\n                            <LinceVideoTool ref=\"linceTool\" tool={this.state.tool} onSave={this._doSave}/>\r\n                        </div>\r\n                    </div>\r\n                </Layout>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default VideoApp;","import styled from 'styled-components';\n\nconst LayoutContentWrapper = styled.div`\n  padding: 40px 20px;\n  display: flex;\n  flex-flow: row wrap;\n  overflow: hidden;\n\n  @media only screen and (max-width: 767px) {\n    padding: 50px 20px;\n  }\n\n  @media (max-width: 580px) {\n    padding: 15px;\n  }\n`;\n\nexport { LayoutContentWrapper };\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n\nconst LayoutContentStyle = styled.div`\n  width: 100%;\n  padding: 35px;\n  background-color: #ffffff;\n  border: 1px solid ${palette('border', 0)};\n  height: 100%;\n`;\n\nexport default LayoutContentStyle;\n","import LayoutContentStyle from './layoutContent.style';\n\nexport default LayoutContentStyle;\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\nimport { transition } from '@iso/lib/helpers/style_utils';\n\nconst Buttons = ComponentName => styled(ComponentName)`\n  &.ant-btn {\n    display: inline-block;\n    margin-bottom: 0;\n    font-weight: 500;\n    text-align: center;\n    -ms-touch-action: manipulation;\n    touch-action: manipulation;\n    cursor: pointer;\n    background-image: none;\n    border: 1px solid transparent;\n    white-space: nowrap;\n    line-height: 1.5;\n    padding: 0 25px;\n    font-size: 14px;\n    border-radius: 4px;\n    height: 36px;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    position: relative;\n    color: ${palette('text', 1)};\n    border-color: ${palette('border', 0)};\n    ${transition()};\n\n    &:hover {\n      border-color: ${palette('primary', 0)};\n      color: ${palette('primary', 0)};\n    }\n\n    > .anticon + span,\n    > span + .anticon {\n      margin: ${props =>\n        props['data-rtl'] === 'rtl' ? '0 0.5em 0 0' : '0 0 0 0.5em'};\n    }\n\n    .anticon-right {\n      transform: ${props =>\n        props['data-rtl'] === 'rtl' ? 'rotate(180deg)' : 'rotate(0)'};\n    }\n\n    .anticon-left {\n      transform: ${props =>\n        props['data-rtl'] === 'rtl' ? 'rotate(180deg)' : 'rotate(0)'};\n    }\n\n    &.ant-btn-primary {\n      background-color: ${palette('primary', 0)};\n      border-color: ${palette('primary', 0)};\n\n      &:hover {\n        background-color: ${palette('primary', 10)};\n        border-color: ${palette('primary', 10)};\n        color: #fff;\n      }\n    }\n\n    &.ant-btn-sm {\n      padding: 0 15px;\n      height: 28px;\n      font-size: 12px;\n\n      &.ant-btn-loading:not(.ant-btn-circle):not(.ant-btn-circle-outline) {\n        padding: ${props =>\n          props['data-rtl'] === 'rtl' ? '0 24px 0 15px' : '0 15px 0 24px'};\n        .anticon {\n          margin: ${props =>\n            props['data-rtl'] === 'rtl' ? '0 -17px 0 0' : '0 0 0 -17px'};\n        }\n      }\n    }\n\n    &.ant-btn-lg {\n      padding: 0 35px;\n      font-size: 14px;\n      height: 42px;\n    }\n\n    &.ant-btn-primary {\n      color: #ffffff;\n    }\n\n    &.ant-btn-dashed {\n      border-style: dashed;\n      border-color: ${palette('border', 1)};\n\n      &:hover {\n        color: ${palette('primary', 0)};\n        border-color: ${palette('primary', 0)};\n      }\n    }\n\n    &.ant-btn-danger {\n      background-color: ${palette('error', 0)};\n      border-color: ${palette('error', 0)};\n      color: #ffffff;\n\n      &:hover {\n        background-color: ${palette('error', 2)};\n        border-color: ${palette('error', 2)};\n      }\n\n      &.ant-btn-background-ghost {\n        color: ${palette('error', 0)};\n        background-color: transparent;\n        border-color: ${palette('error', 0)};\n\n        &:hover {\n          color: ${palette('error', 2)};\n          border-color: ${palette('error', 2)};\n        }\n      }\n    }\n\n    &.ant-btn-circle,\n    &.ant-btn-circle-outline {\n      width: 35px;\n      padding: 0;\n      font-size: 14px;\n      border-radius: 50%;\n      height: 35px;\n\n      &.ant-btn-sm {\n        padding: 0;\n        height: 28px;\n        width: 28px;\n        font-size: 12px;\n      }\n\n      &.ant-btn-lg {\n        padding: 0;\n        font-size: 14px;\n        height: 42px;\n        width: 42px;\n      }\n    }\n\n    &.ant-btn.disabled,\n    &.ant-btn[disabled],\n    &.ant-btn.disabled:hover,\n    &.ant-btn[disabled]:hover,\n    &.ant-btn.disabled:focus,\n    &.ant-btn[disabled]:focus,\n    &.ant-btn.disabled:active,\n    &.ant-btn[disabled]:active,\n    &.ant-btn.disabled.active,\n    &.ant-btn[disabled].active {\n      color: ${palette('grayscale', 2)};\n      background-color: #f7f7f7;\n      border-color: ${palette('border', 0)};\n      cursor: not-allowed;\n    }\n\n    &.ant-btn-loading:not(.ant-btn-circle):not(.ant-btn-circle-outline)\n      .anticon {\n      margin: ${props =>\n        props['data-rtl'] === 'rtl' ? '0 -14px 0 0' : '0 0 0 -14px'};\n    }\n\n    &.isoButton {\n      display: inline-block;\n      margin-bottom: 0;\n      font-weight: 500;\n      text-align: center;\n      -ms-touch-action: manipulation;\n      touch-action: manipulation;\n      cursor: pointer;\n      background-image: none;\n      border: 0;\n      white-space: nowrap;\n      line-height: 1.5;\n      padding: 0 25px;\n      font-size: 13px;\n      border-radius: 4px;\n      height: 35px;\n      -webkit-user-select: none;\n      -moz-user-select: none;\n      -ms-user-select: none;\n      user-select: none;\n      position: relative;\n      color: #ffffff;\n      background-color: ${palette('primary', 0)};\n      ${transition()};\n\n      &:hover {\n        background-color: ${palette('primary', 2)};\n      }\n\n      &.isoBtnSm {\n        padding: 0 15px;\n        height: 28px;\n        font-size: 12px;\n      }\n\n      &.isoBtnLg {\n        padding: 0 35px;\n        font-size: 14px;\n        height: 42px;\n      }\n    }\n  }\n\n  + .ant-btn-group {\n    margin-left: ${props =>\n      props['data-rtl'] === 'rtl' ? '0' : '-1px'} !important;\n    margin-right: ${props =>\n      props['data-rtl'] === 'rtl' ? '-1px' : '0'} !important;\n  }\n`;\n\nconst RadioButtons = ComponentName => styled(ComponentName)`\n  .ant-radio-button-wrapper {\n    height: 35px;\n    line-height: 33px;\n    color: ${palette('text', 1)};\n    border: 1px solid ${palette('border', 0)};\n    border-left: 0;\n    background: #fff;\n    padding: 0 20px;\n\n    &:hover,\n    &.ant-radio-button-wrapper-focused {\n      color: ${palette('primary', 0)};\n    }\n\n    &.ant-radio-button-wrapper-checked {\n      background: #fff;\n      border-color: ${palette('primary', 0)};\n      color: ${palette('primary', 0)};\n      box-shadow: -1px 0 0 0 ${palette('primary', 0)};\n    }\n  }\n`;\n\nconst ButtonsGroup = ComponentName => styled(ComponentName)`\n  &.ant-btn-group {\n    .ant-btn {\n      margin: 0;\n      margin-right: 0;\n      display: inline-block;\n      margin-bottom: 0;\n      font-weight: 500;\n      text-align: center;\n      -ms-touch-action: manipulation;\n      touch-action: manipulation;\n      cursor: pointer;\n      background-image: none;\n      border: 1px solid transparent;\n      border-color: ${palette('border', 1)};\n      white-space: nowrap;\n      line-height: 1.5;\n      padding: 0 8px;\n      font-size: 14px;\n      border-radius: 0;\n      height: 36px;\n      -webkit-user-select: none;\n      -moz-user-select: none;\n      -ms-user-select: none;\n      user-select: none;\n      position: relative;\n      ${transition()};\n\n      &:hover {\n        border-color: ${palette('primary', 0)};\n      }\n\n      &.ant-btn-dashed {\n        border-style: dashed;\n\n        &:hover {\n          border-color: ${palette('primary', 0)};\n        }\n      }\n\n      &.ant-btn-primary {\n        border-color: ${palette('primary', 0)};\n\n        &:hover {\n          border-color: ${palette('primary', 10)};\n        }\n      }\n    }\n\n    > .ant-btn:first-child:not(:last-child) {\n      border-radius: ${props =>\n        props['data-rtl'] === 'rtl' ? '0 4px 4px 0' : '4px 0 0 4px'};\n    }\n\n    > .ant-btn:last-child:not(:first-child) {\n      border-radius: ${props =>\n        props['data-rtl'] === 'rtl' ? '4px 0 0 4px' : '0 4px 4px 0'};\n    }\n\n    .ant-btn-primary:last-child:not(:first-child),\n    .ant-btn-primary + .ant-btn-primary {\n      border-left-color: ${props =>\n        props['data-rtl'] === 'rtl'\n          ? palette('primary', 0)\n          : palette('primary', 2)};\n      border-right-color: ${props =>\n        props['data-rtl'] === 'rtl'\n          ? palette('primary', 2)\n          : palette('primary', 0)};\n    }\n\n    .ant-btn-primary:first-child:not(:last-child) {\n      border-left-color: ${props =>\n        props['data-rtl'] === 'rtl'\n          ? palette('primary', 2)\n          : palette('primary', 0)};\n      border-right-color: ${props =>\n        props['data-rtl'] === 'rtl'\n          ? palette('primary', 0)\n          : palette('primary', 2)};\n    }\n\n    .ant-btn + .ant-btn,\n    + .ant-btn {\n      margin-left: ${props =>\n        props['data-rtl'] === 'rtl' ? '0' : '-1px'} !important;\n      margin-right: ${props =>\n        props['data-rtl'] === 'rtl' ? '-1px' : '0'} !important;\n    }\n\n    &.ant-btn-group-lg {\n      > .ant-btn {\n        padding: 0 35px;\n        font-size: 14px;\n        height: 42px;\n      }\n    }\n\n    &.ant-btn-group-sm {\n      > .ant-btn {\n        padding: 0 15px;\n        height: 28px;\n        font-size: 12px;\n      }\n    }\n  }\n\n  &.ant-btn-group + &.ant-btn-group {\n    margin-left: ${props =>\n      props['data-rtl'] === 'rtl' ? '0' : '-1px'} !important;\n    margin-right: ${props =>\n      props['data-rtl'] === 'rtl' ? '-1px' : '0'} !important;\n  }\n`;\n\nconst GhostButtons = ComponentName => styled(ComponentName)`\n  .ant-btn-background-ghost {\n    background: transparent !important;\n    border-color: #fff;\n    color: #fff;\n\n    &.ant-btn-primary {\n      color: ${palette('primary', 0)};\n      background-color: transparent;\n      border-color: ${palette('primary', 0)};\n    }\n  }\n`;\n\nexport { Buttons, ButtonsGroup, RadioButtons, GhostButtons };\n","import { Button } from 'antd';\nimport { Buttons, ButtonsGroup } from './styles/button.style';\nimport WithDirection from '@iso/lib/helpers/rtl';\nconst AntButton = Buttons(Button);\nconst isoButton = WithDirection(AntButton);\nconst AntButtonGroup = ButtonsGroup(Button.Group);\nconst ButtonGroup = WithDirection(AntButtonGroup);\n\nexport default isoButton;\nexport { ButtonGroup };\n","import React from 'react';\nimport { LayoutContentWrapper } from './layoutWrapper.style';\n\nexport default props => (\n  <LayoutContentWrapper\n    className={\n      props.className != null\n        ? `${props.className} isoLayoutContentWrapper`\n        : 'isoLayoutContentWrapper'\n    }\n    {...props}\n  >\n    {props.children}\n  </LayoutContentWrapper>\n);\n","import i18n from 'i18next';\r\nimport Backend from 'i18next-xhr-backend';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport {initReactI18next} from 'react-i18next';\r\n\r\ni18n\r\n// load translation using xhr -> see /public/locales\r\n// learn more: https://github.com/i18next/i18next-xhr-backend\r\n    .use(Backend)\r\n    // detect user language\r\n    // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n    .use(LanguageDetector)\r\n    // pass the i18n instance to react-i18next.\r\n    .use(initReactI18next)\r\n    // init i18next\r\n    // for all options read: https://www.i18next.com/overview/configuration-options\r\n    .init({\r\n        preload: ['es', 'en'],\r\n        initImmediate:false,\r\n        //whitelist: ['en', 'es'],\r\n        //nonExplicitWhitelist: false,\r\n        load: 'languageOnly',\r\n        detection: {\r\n            lookupQuerystring: 'lang', //will detect chosen language from user\r\n        },\r\n        fallbackLng: {\r\n            'es-ES': ['es'],\r\n            'en-US': ['en'],\r\n            default: ['es'],\r\n        },\r\n        //fallbackLng: 'en',\r\n        debug: true,\r\n        react: {\r\n            wait: true,\r\n            bindI18n: 'languageChanged loaded',\r\n        },\r\n        interpolation: {\r\n            escapeValue: false, // not needed for react as it escapes by default\r\n        },\r\n    });\r\n\r\nexport default i18n;\r\n","import React from 'react';\r\nimport {Resizable} from 're-resizable';\r\nconst style = {\r\n    zIndex:\"9999!important\",\r\n    borderRight: 'solid 5px #ddd',\r\n    margin: '5px 5 5 5'\r\n}\r\nexport default function StyledResizable(props) {\r\n    return <Resizable {...props} style={style}/>\r\n}\r\n","import React, {Component, forwardRef} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from \"prop-types\";\r\nimport {deleteRegister, fetchRegister, fetchTool} from '../../redux/lince/videoActions';\r\nimport DataTable from \"react-data-table-component\";\r\nimport {Trans} from 'react-i18next';\r\nimport Moment from 'react-moment';\r\nimport UserSeconds from \"../utility/UserSeconds\";\r\n\r\nclass LinceRegister extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {selected: -1};//https://stackoverflow.com/questions/44845372/select-row-on-click-react-table\r\n        this.clearSelection = this.clearSelection.bind(this);\r\n        this._deleteScene = this._deleteScene.bind(this);\r\n        this._playScene = this._playScene.bind(this);\r\n    }\r\n\r\n    clearSelection() {\r\n        this.setState({selected: -1});\r\n    }\r\n\r\n    _deleteScene(o) {\r\n        let sceneWrapper = {moment: o.row.videoTime};\r\n        this.props.deleteRegister(sceneWrapper);\r\n    };\r\n\r\n    _playScene(o) {\r\n        /*  console.log(o.row.videoTime);\r\n          console.log(`seconds ${o.row.videoTime} ${UserSeconds(o.row.videoTime)}`);*/\r\n        this.setState({selected: o.row.id});\r\n        this.props.onPlayRegister(o.row);\r\n        this.forceUpdate();\r\n        setTimeout(() => {\r\n            this.clearSelection()\r\n        }, 10000);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchTool();\r\n        this.props.fetchRegister();\r\n        this._isMounted = true;\r\n    }\r\n\r\n    render() {\r\n        //https://developer.aliyun.com/mirror/npm/package/react-data-table-component\r\n        let columns = [\r\n            {\r\n                name: <span><i className=\"fa fa-odnoklassniki\"/>&#160;<Trans i18nKey=\"action\">Action</Trans></span>,\r\n                sortable: false,\r\n                minWidth:\"108px\",\r\n                cell: row => {\r\n                    return <div>\r\n                        <button type=\"button\" className=\"btn red btn-playscene\"\r\n                                onClick={() => this._playScene({row})}>\r\n                            <i className=\"fa fa-share\"/>&#160;\r\n                        </button>\r\n                        &#160;&#160;\r\n                        <button type=\"button\" className=\"btn blue btn-deletescene\"\r\n                                onClick={() => this._deleteScene({row})}>\r\n                            <i className=\"fa fa-trash-o\"/>\r\n                        </button>\r\n                    </div>\r\n                }\r\n            }, {\r\n                name: <span><i className=\"fa fa-hourglass-o\"/>T (sec)</span>,\r\n                selector: 'videoTime', sortable: true, format: d => {\r\n                    return UserSeconds(d.videoTime);\r\n                }\r\n            }, {\r\n                name: <span><i className=\"fa fa-television\"/> Frame</span>,\r\n                hide: 'xs',\r\n                selector: 'frames', sortable: true\r\n            }];\r\n        if (this.props.fullMode) {\r\n            this.props.tool.forEach(v => {\r\n                const currentId = v.id;\r\n                columns.push({\r\n                    name: <span>{v.code}</span>,\r\n                    //sortable: true,\r\n                    //selector: 'saveDate',\r\n                    cell: row => {\r\n                        let value = \"\";\r\n                        row.register.forEach(currentRegister => {\r\n                            if (currentRegister.parent === currentId) {\r\n                                if (currentRegister.nodeInformation !== null) {\r\n                                    value = currentRegister.nodeInformation.substring(0, 10);\r\n                                    if (currentRegister.nodeInformation.length > 10) {\r\n                                        value += \"...\";\r\n                                    }\r\n                                } else {\r\n                                    value = currentRegister.code;\r\n                                }\r\n                            }\r\n                        });\r\n                        return <span>{value}</span>;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        columns.push({\r\n            name: <span><i className=\"fa fa-calendar-check-o\"/>&#160;<Trans i18nKey=\"date\">Date</Trans></span>,\r\n            hide: 'xs',\r\n            sortable: true,\r\n            selector: 'saveDate',\r\n            cell: (row) => {\r\n                return <Moment format=\"DD/MM/YY HH:mm\" parse=\"DD-MM-YYYY HH:mm:ss\"\r\n                               date={row.saveDate}/>\r\n            }\r\n\r\n        });\r\n        const selectedId = this.state ? this.state.selected : -1;\r\n        const conditionalRowStyles = [\r\n            {\r\n                when: row => row.id === selectedId,\r\n                style: {\r\n                    backgroundColor: 'rgba(248, 148, 6, 0.9)',\r\n                    color: 'black',\r\n                    '&:hover': {\r\n                        cursor: 'pointer',\r\n                    },\r\n                },\r\n            }\r\n        ];\r\n        return (\r\n            <DataTable noHeader dense fixedHeader\r\n                /*fixedHeaderScrollHeight=\"100%\"*/ /*pagination*/\r\n                       conditionalRowStyles={conditionalRowStyles}\r\n                /*customStyles={customStyles}*/\r\n                       columns={columns}\r\n                       data={this.props.register}\r\n                       defaultSortField=\"videoTime\"\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nLinceRegister.propTypes = {\r\n    tool: PropTypes.array,\r\n    register: PropTypes.array,\r\n    fullMode: PropTypes.bool,\r\n    fetchRegister: PropTypes.func.isRequired,\r\n    deleteRegister: PropTypes.func.isRequired,\r\n    fetchTool: PropTypes.func.isRequired,\r\n    onPlayRegister: PropTypes.func.isRequired,\r\n};\r\nLinceRegister.defaultProps = {\r\n    fullMode: true\r\n};\r\n/*\r\nforward ref https://github.com/reduxjs/react-redux/issues/914\r\nhttps://buildreactapps.com/how-to-pass-ref-using-react-forwardref/\r\nhttps://medium.com/flow-type/supporting-react-forwardref-and-beyond-f8dd88f35544\r\n */\r\nconst mapStateToProps = state => ({\r\n    tool: state.lince.tool,\r\n    register: state.lince.register\r\n});\r\nconst ConnectedLinceRegister = connect(mapStateToProps, {\r\n    fetchRegister: fetchRegister,\r\n    fetchTool: fetchTool,\r\n    deleteRegister: deleteRegister\r\n}, null, {forwardRef: true})(LinceRegister);\r\nexport default forwardRef((props, ref) =>\r\n    <ConnectedLinceRegister {...props} myForwardedRef={ref}/>\r\n);","module.exports = __webpack_public_path__ + \"static/media/LinceKeys.6edf0af9.jpg\";","import React, {Component} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {Trans} from 'react-i18next';\r\nimport {Menu} from 'antd';\r\nimport {faBellSlash, faFilm} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport imgKeys from \"../../assets/images/LinceKeys.jpg\";\r\nimport ShowNotification from \"../utility/ShowNotification\";\r\nimport LinceMenu from \"../../containers/Lince/styled/LinceItems\";\r\n\r\nconst {SubMenu} = Menu;\r\n\r\nclass LinceVideoManager extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSoundTo = this.props.onSoundTo.bind(this);\r\n        this.onResize = this.props.onResize.bind(this);\r\n        this.onSetPlayBack = this.props.onSetPlayBack.bind(this);\r\n        this.onStop = this.props.onStop.bind(this);\r\n        this.onPause = this.props.onPause.bind(this);\r\n        this.onSync = this.props.onSync.bind(this);\r\n        this.onPlay = this.props.onPlay.bind(this);\r\n        this.state = {speed: \"speed:10\", video: \"view:2\"}\r\n    }\r\n\r\n    handleClick = e => {\r\n        switch (e.key) {\r\n            case \"play\":\r\n                this.onPlay();\r\n                break;\r\n            case \"pause\":\r\n                this.onPause();\r\n                break;\r\n            case \"stop\":\r\n                this.onStop();\r\n                break;\r\n            case \"mute\":\r\n                this.onSoundTo();\r\n                break;\r\n            case \"sync\"                :\r\n                this.onSync();\r\n                break;\r\n            case \"speed:02\":\r\n                this.onSetPlayBack(0.2);\r\n                this.setState({speed: e.key});\r\n                break;\r\n            case \"speed:05\":\r\n                this.onSetPlayBack(0.5);\r\n                this.setState({speed: e.key});\r\n                break;\r\n            case \"speed:10\":\r\n                this.onSetPlayBack(1);\r\n                this.setState({speed: e.key});\r\n                break;\r\n            case \"speed:20\":\r\n                this.onSetPlayBack(2);\r\n                this.setState({speed: e.key});\r\n                break;\r\n            case \"view:1\":\r\n                this.onResize(24);\r\n                this.setState({video: e.key});\r\n                break;\r\n            case \"view:2\":\r\n                this.setState({video: e.key});\r\n                this.onResize(12);\r\n                break;\r\n            case \"view:3\":\r\n                this.setState({video: e.key});\r\n                this.onResize(8);\r\n                break;\r\n            default:\r\n                const message = <>\r\n                    <div>Press this keys and experience with lince player in a new way:</div>\r\n                    <ul>\r\n                        <li><b>q</b>: Play</li>\r\n                        <li><b>w</b>: Pause</li>\r\n                        <li><b>e</b>: Stop</li>\r\n                        <li><b>a</b>: Speed to 1x</li>\r\n                        <li><b>s</b>: Speed to 0.2x</li>\r\n                        <li><b>d</b>: Jump back 5 secs</li>\r\n                        <li><b>f</b>: Jump forward 5 secs</li>\r\n                        <li><b>1</b>: Change view to 1 video per row</li>\r\n                        <li><b>2</b>: Change view to 2 video per row</li>\r\n                        <li><b>3</b>: Change view to 3 video per row</li>\r\n                    </ul>\r\n                    <img src={imgKeys} alt=\"lince keys\" width=\"100%\"/>\r\n                </>;\r\n                ShowNotification(\"Keyboard shortcuts for lince player\", message);\r\n                break;\r\n        }\r\n        this.setState({\r\n            current: e.key,\r\n        });\r\n        return false;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <LinceMenu onClick={this.handleClick} mode=\"horizontal\"\r\n                       className={\"font-green-sharp\"}\r\n                       ref={\"linceMenu\"}\r\n                       theme={\"dark\"}\r\n                       selectedKeys={[this.state.speed, this.state.video, this.state.current]}>\r\n                <Menu.Item key=\"shortcuts\" selectable={\"false\"}>\r\n                    <b>\r\n                        <Trans i18nKey=\"video.synchronizedActions\" className={\"isoWidgetLabel\"}>Synchronized\r\n                            actions</Trans>&#160;\r\n                        <i className=\"ion-information-circled\"/>\r\n                    </b>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"play\">\r\n                    <i className=\"ion-play\"/>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"pause\">\r\n                    <i className=\"ion-pause\"/>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"stop\">\r\n                    <i className=\"ion-stop\"/>\r\n                </Menu.Item>\r\n                <SubMenu title={<i className=\"ion-clock\"/>}>\r\n                    <Menu.Item key=\"speed:02\">0.2 x</Menu.Item>\r\n                    <Menu.Item key=\"speed:05\">0.5 x</Menu.Item>\r\n                    <Menu.Item key=\"speed:10\">1 x</Menu.Item>\r\n                    <Menu.Item key=\"speed:20\">2 x</Menu.Item>\r\n                </SubMenu>\r\n                <Menu.Item key=\"mute\">\r\n                    <FontAwesomeIcon icon={faBellSlash}/>&#160;\r\n                    <span>MUTE</span>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"sync\">\r\n                    <i className=\"ion-refresh\"/>&#160;\r\n                    <span>SINC</span>\r\n                </Menu.Item>\r\n                <SubMenu title={<FontAwesomeIcon icon={faFilm}/>}>\r\n                    <Menu.Item key=\"view:1\">1 video per row</Menu.Item>\r\n                    <Menu.Item key=\"view:2\">2 video per row</Menu.Item>\r\n                    <Menu.Item key=\"view:3\">3 video per row</Menu.Item>\r\n                </SubMenu>\r\n            </LinceMenu>\r\n\r\n        )\r\n            ;\r\n    }\r\n}\r\n\r\nLinceVideoManager.propTypes = {\r\n    onSoundTo: PropTypes.func,\r\n    onSync: PropTypes.func,\r\n    onSetPlayBack: PropTypes.func,\r\n    onStop: PropTypes.func,\r\n    onPause: PropTypes.func,\r\n    onPlay: PropTypes.func,\r\n    onResize: PropTypes.func,\r\n};\r\nexport default LinceVideoManager;\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {baseUrl, fetchVideos} from '../../redux/lince/videoActions';\r\nimport {ControlBar, PlaybackRateMenuButton, Player, ReplayControl, VolumeMenuButton} from 'video-react';\r\nimport LinceVideoManager from './LinceVideoManager';\r\nimport PropTypes from \"prop-types\";\r\nimport {Col, Row} from 'antd';\r\nimport \"video-react/dist/video-react.css\";\r\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\r\n\r\nconst videoRefPrefix = \"video\";\r\n\r\nclass LinceVideoPlayer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {mute: true, size: this.props.defaultSize};\r\n        this._doVideoSync = this._doVideoSync.bind(this);\r\n        this._doPlay = this._doPlay.bind(this);\r\n        this._doPause = this._doPause.bind(this);\r\n        this._doMute = this._doMute.bind(this);\r\n        this._doPlayback = this._doPlayback.bind(this);\r\n        this._doResize = this._doResize.bind(this);\r\n        this._doStop = this._doStop.bind(this);\r\n        this.getCurrentTime = this.getCurrentTime.bind(this);\r\n        this.getVideoLength = this.getVideoLength.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchVideos();\r\n    }\r\n\r\n    doPlayScene(time) {\r\n        this._applyAllVideos((v, player) => {\r\n            player.pause();\r\n            player.seek(time);\r\n        });\r\n    }\r\n    getCurrentTime() {\r\n        let currentTime = 0.1;\r\n        this._applyAllVideos((v, player) => {\r\n            //OJO\r\n            if (v === this.props.videos[0]) {\r\n                currentTime = player.getState().player.currentTime;\r\n                return;\r\n            }\r\n        });\r\n        return currentTime;\r\n    }\r\n    getVideoLength(){\r\n        let time=0.1;\r\n        if (this.props.videos && this.props.videos.length>0){\r\n            this._applyAllVideos((v, player) => {\r\n                //OJO\r\n                if (v === this.props.videos[0]) {\r\n                    time = player.getState().player.duration;\r\n                    return;\r\n                }\r\n            });\r\n        }\r\n        return time;\r\n    }\r\n    _applyAllVideos(f) {\r\n        this.props.videos.map((v, player) => f(v, this.refs[videoRefPrefix + v.id]));\r\n    }\r\n\r\n    _doVideoSync() {\r\n        let isFirst = true;\r\n        let currentTime;\r\n        this._applyAllVideos((v, player) => {\r\n            if (isFirst) {\r\n                isFirst = !isFirst;\r\n                currentTime = player.getState().player.currentTime;\r\n            } else {\r\n                player.seek(currentTime);\r\n            }\r\n        });\r\n    }\r\n\r\n    _doPlay() {\r\n        this._applyAllVideos((v, player) => {\r\n            player.play();\r\n        });\r\n        console.log(\"action\" + this.getCurrentTime());\r\n    }\r\n\r\n    _doPause() {\r\n        this._applyAllVideos((v, player) => {\r\n            player.pause();\r\n        });\r\n    }\r\n\r\n    _doStop() {\r\n        this._applyAllVideos((v, player) => {\r\n            player.pause();\r\n            player.seek(0);\r\n        });\r\n    }\r\n\r\n    _doMute() {\r\n        this.setState({mute: !this.state.mute});\r\n        this._applyAllVideos((v, player) => {\r\n            player.muted = this.state.mute;\r\n        });\r\n    }\r\n\r\n    _doPlayback(speed) {\r\n        this._applyAllVideos((v, player) => {\r\n            player.playbackRate = speed;\r\n\r\n        });\r\n    }\r\n\r\n    _doResize(size) {\r\n        this.setState({size: size});\r\n    }\r\n\r\n    _renderVideo(key, url, type) {\r\n        /* En la documentacion usa esto: ref={(c) => {              this.player[key] = c; }}\r\n        * OJO: SE DEBE DEFINIR EN EL ELEMENTO UN PARAMETRO KEY AL RENDERIZAR UN MAP\r\n        * */\r\n        //const videoClass = \"ant-col-sm-\" + this.state.size + \" ant-col-md-\" + this.state.size;\r\n        const size = this.state.size;\r\n        return (\r\n            <Col key={key} span={size}>\r\n                <Player ref={videoRefPrefix + key}\r\n                        autoPlay={false/*this.props.autoPlay*/}\r\n                        playsInline>\r\n                    <source src={baseUrl + url} type={type}/>\r\n                    <ControlBar autoHide={false}>\r\n                        <VolumeMenuButton vertical={true}/>\r\n                        <PlaybackRateMenuButton rates={[5, 2, 1, 0.5, 0.1]}/>\r\n                        <ReplayControl seconds={5} order={2.1}/>\r\n                    </ControlBar>\r\n                </Player>\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    _keyboardActions(key, e) {\r\n        switch (key) {\r\n            case \"q\":\r\n                this._doPlay();\r\n                break;\r\n            case \"w\":\r\n                this._doPause();\r\n                break;\r\n            case \"e\":\r\n                this._doStop();\r\n                break;\r\n            case \"1\":\r\n                this._doResize(24);\r\n                break;\r\n            case \"2\"                :\r\n                this._doResize(12);\r\n                break;\r\n            case \"3\":\r\n                this._doResize(8);\r\n                break;\r\n            case \"a\":\r\n                this._doPlayback(1);\r\n                break;\r\n            case \"s\":\r\n                this._doPlayback(0.5);\r\n                break;\r\n            case \"d\":\r\n                this.doPlayScene(this.getCurrentTime()-5);\r\n                break;\r\n            case \"f\":\r\n                this.doPlayScene(this.getCurrentTime()+5);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        //console.log(`do something upon keydown event of ${key}`);\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const videos = this.props.videos;\r\n        return (\r\n            <>\r\n                <KeyboardEventHandler\r\n                    handleKeys={this.props.keyboard}\r\n                    onKeyEvent={(key, e) => this._keyboardActions(key, e)}/>\r\n                <Row>\r\n                    <Col span={24}>\r\n                        <LinceVideoManager\r\n                            onSoundTo={this._doMute}\r\n                            onSync={this._doVideoSync}\r\n                            onSetPlayBack={this._doPlayback}\r\n                            onStop={this._doStop}\r\n                            onPause={this._doPause}\r\n                            onPlay={this._doPlay}\r\n                            onResize={this._doResize}\r\n                        />\r\n\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    {videos.map((v) => this._renderVideo(v.id, v.url, v.type))}\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nLinceVideoPlayer.defaultProps = {\r\n    autoPlay: false,\r\n    defaultSize:12,\r\n    keyboard: ['q', 'w', 'e', '1', '2', '3', 's','a','d','f']\r\n};\r\nLinceVideoPlayer.propTypes = {\r\n    name: PropTypes.string,\r\n    autoPlay: PropTypes.bool,\r\n    defaultSize:PropTypes.number,\r\n    keyboard: PropTypes.array.isRequired,\r\n    videos: PropTypes.array.isRequired,\r\n    fetchVideos: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    videos: state.lince.videos\r\n});\r\n//TODO: templates/scenes.ftl:253 change scene view via ajax\r\nexport default connect(mapStateToProps, {fetchVideos}, null, {forwardRef: true})(LinceVideoPlayer);\r\n\r\n"],"sourceRoot":""}