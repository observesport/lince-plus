{"version":3,"sources":["components/lince/LincePieChart.js","components/lince/LinceSceneChart.js","containers/Lince/Results.js","../../../shared/components/utility/layoutWrapper.style.js","../../../shared/components/utility/layoutContent.style.js","../../../shared/components/utility/layoutContent.js","../../../shared/assets/styles/constants.js","../../../shared/components/utility/box.style.js","../../../shared/components/utility/boxTitle.style.js","../../../shared/components/utility/boxTitle.js","../../../shared/components/utility/pageHeader.style.js","../../../shared/components/utility/pageHeader.js","components/lince/StyledLayoutComponents.js","components/lince/StyledResizable.js","components/utility/FullscreenBox.js"],"names":["LinceInnerChartStyled","styled","div","createTheme","text","primary","secondary","background","default","context","divider","action","button","hover","disabled","LinceExpandedComponent","data","customPieChart","chart","plotBackgroundColor","plotBorderWidth","plotShadow","type","title","name","tooltip","pointFormat","plotOptions","pie","allowPointSelect","cursor","dataLabels","enabled","format","style","color","Highcharts","theme","contrastTextColor","series","pieData","serie","forEach","aux","push","y","pieDataRoot","colorByPoint","highcharts","options","noHeader","dense","columns","selector","id","d","toFixed","LincePieChart","props","state","_getRowInfo","bind","this","fetchGraphPie","console","log","criteria","Object","keys","k","i","row","className","sortable","expandableRows","highlightOnHover","defaultSortField","expandableRowsComponent","Component","connect","store","lince","forwardRef","LinceSceneChart","fetchGraphChart","yAxisTimeDataLabels","ySeriesLabels","item","index","key","value","values","zoomType","subtitle","xAxis","categories","xSeriesLabels","yAxis","labels","formatter","plotLines","width","tickInterval","valueSuffix","legend","layout","align","verticalAlign","borderWidth","spline","marker","radius","lineColor","lineWidth","ref","ReactGA","initialize","siteConfig","google","analyticsKey","pageview","window","location","pathname","search","StyledLayout","LayoutContent","dispatch","useDispatch","rowStyle","basicStyle","colStyle","gutter","useEffect","fetchSessionParameters","justify","md","sm","xs","display","height","StyledResizable","defaultSize","minWidth","minHeight","FullscreenBox","LayoutContentWrapper","LayoutContentStyle","palette","flexFlow","marginBottom","BoxWrapper","BoxTitle","h3","BoxSubTitle","p","WDComponentTitleWrapper","h1","ComponentTitleWrapper","WithDirection","children","LinceLayoutContent","StyledLayoutContentWrapper","CenteredCol","zIndex","borderRight","margin","icon","collapsed","useSelector","App","useState","fullscreen","setFullscreen","paddingLeft","paddingTop","shape","onClick","allowScrollbar","fullScreen"],"mappings":"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","file":"static/js/29.2ab71609.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {fetchGraphPie} from '../../redux/lince/videoActions';\r\nimport PropTypes from \"prop-types\";\r\nimport 'react-table/react-table.css';\r\nimport styled from \"styled-components\";\r\nimport DataTable,{ createTheme } from \"react-data-table-component\";\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\n/***\r\n Basado en el repositorio oficial de highcharts\r\n https://github.com/highcharts/highcharts-react\r\n */\r\nconst LinceInnerChartStyled = styled.div`\r\n  padding: 2px;\r\n  display: block;\r\n  width: 100%;\r\n  p {\r\n    font-size: 16px;\r\n    font-weight: 700;\r\n    word-break: break-all;\r\n  }\r\n`;\r\n\r\ncreateTheme('solarized', {\r\n    text: {\r\n        primary: '#c6d9e2',\r\n        secondary: '#2aa198',\r\n    },\r\n    background: {\r\n        default: '#2d3446',\r\n    },\r\n    context: {\r\n        background: '#cb4b16',\r\n        text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n        default: '#073642',\r\n    },\r\n    action: {\r\n        button: 'rgba(0,0,0,.54)',\r\n        hover: 'rgba(0,0,0,.08)',\r\n        disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n});\r\nconst LinceExpandedComponent = ({data}) => {\r\n    const columns = [\r\n        {name: \"Nombre\", selector: \"name\"},\r\n        {name: \"Visualizaciones\", selector: \"total\"},\r\n        {id: \"Fraction\", name: \"% sobre el total\", selector: \"y\", format: d => `${(d.y).toFixed(2)} %`}\r\n    ];\r\n    let customPieChart = {\r\n        chart: {\r\n            plotBackgroundColor: null,\r\n            plotBorderWidth: null,\r\n            plotShadow: false,\r\n            type: 'pie'\r\n        },\r\n        title: {\r\n            text: `Visualizaciones del criterio ${data.name}`\r\n        },\r\n        tooltip: {\r\n            pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n        },\r\n        plotOptions: {\r\n            pie: {\r\n                allowPointSelect: true,\r\n                cursor: 'pointer',\r\n                dataLabels: {\r\n                    enabled: true,\r\n                    format: '<b>{point.name}</b>: {point.percentage:.1f} %',\r\n                    style: {\r\n                        color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        series: []\r\n    };\r\n    let pieData = [];\r\n    data.serie.forEach(aux => {\r\n        pieData.push({name: aux.name, y: aux.y});\r\n    });\r\n    const pieDataRoot = {name: data.name, colorByPoint: true, data: pieData};\r\n    customPieChart.series = [pieDataRoot];\r\n    return (\r\n        <LinceInnerChartStyled>\r\n            <HighchartsReact highcharts={Highcharts} options={customPieChart}/>\r\n            <DataTable noHeader dense columns={columns} data={data.serie}   theme=\"solarized\"/>\r\n        </LinceInnerChartStyled>\r\n    );\r\n};\r\n\r\nclass LincePieChart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this._getRowInfo = this._getRowInfo.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchGraphPie();\r\n    }\r\n\r\n    _getRowInfo(name) {\r\n        console.log(name);\r\n    }\r\n\r\n    render() {\r\n        let masterColumns = [{name: 'Name', selector: 'name', sortable: true,}\r\n            , {name: 'Total', selector: 'total', sortable: true}\r\n            , {name: 'Porcentaje', selector: 'y', sortable: true, format: d => `${(d.y).toFixed(2)} %`}];\r\n        //Las introducimos dentro\r\n        let data = this.props.pie.criteria;\r\n        Object.keys(this.props.pie).forEach((k, i) => {\r\n            if (k !== \"criteria\") {\r\n                data.forEach(row => {\r\n                    if (row.name === k) {\r\n                        row.serie = this.props.pie[k];\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        return (\r\n            <div className={\"row\"}>\r\n                <div className={\"col-md-12\"}>\r\n                    <DataTable\r\n                        title=\"Register summary\"\r\n                        columns={masterColumns}\r\n                        data={data}\r\n                        expandableRows\r\n                        highlightOnHover\r\n                        defaultSortField=\"name\"\r\n                        expandableRowsComponent={<LinceExpandedComponent/>}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLincePieChart.propTypes = {\r\n    pie: PropTypes.object,\r\n    fetchGraphPie: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = store => ({\r\n    pie: store.lince.pie,\r\n});\r\nexport default connect(mapStateToProps, {\r\n    fetchGraphPie: fetchGraphPie\r\n}, null, {forwardRef: true})(LincePieChart);\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {fetchGraphChart, fetchGraphPie} from '../../redux/lince/videoActions';\r\nimport PropTypes from \"prop-types\";\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\n/***\r\n Basado en el repositorio oficial de highcharts\r\n https://github.com/highcharts/highcharts-react\r\n */\r\n\r\nclass LinceSceneChart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchGraphChart();\r\n        //this.refs.sceneChart.setSize(null,null);\r\n    }\r\n\r\n    render() {\r\n        let yAxisTimeDataLabels = {};\r\n        if (this.props.chart.ySeriesLabels) {\r\n            this.props.chart.ySeriesLabels.forEach(function f(item, index) {\r\n                yAxisTimeDataLabels[item.key] = item.value;\r\n            })\r\n        }\r\n        const values = {\r\n            chart: {\r\n                type: 'spline',\r\n                zoomType: 'x'\r\n            },\r\n            title: {\r\n                text: ''\r\n            },\r\n            subtitle: {\r\n                text: ''\r\n            },\r\n            xAxis: {\r\n                categories: this.props.chart.xSeriesLabels,\r\n                type: 'datetime'\r\n            },\r\n            yAxis: {\r\n                title: {\r\n                    text: 'Categories'\r\n                },\r\n                labels: {\r\n                    formatter: function () {\r\n                        let value = yAxisTimeDataLabels[this.value];\r\n                        return value !== 'undefined' ? value : this.value;\r\n                    }\r\n                },\r\n                plotLines: [{\r\n                    value: 0,\r\n                    width: 1,\r\n                    color: '#808080'\r\n                }],\r\n                tickInterval: 1\r\n            },\r\n            tooltip: {\r\n                valueSuffix: 'Cat'\r\n            },\r\n            legend: {\r\n                layout: 'vertical',\r\n                align: 'right',\r\n                verticalAlign: 'middle',\r\n                borderWidth: 0\r\n            },\r\n            plotOptions: {\r\n                spline: {\r\n                    marker: {\r\n                        radius: 4,\r\n                        lineColor: '#666666',\r\n                        lineWidth: 1\r\n                    }\r\n                }\r\n            },\r\n            series: this.props.chart.series\r\n        };\r\n        return (\r\n            <HighchartsReact ref={\"sceneChart\"} highcharts={Highcharts} options={values} style={{width:\"100%\"}}/>\r\n        );\r\n    }\r\n}\r\n\r\nLinceSceneChart.propTypes = {\r\n    chart: PropTypes.object,\r\n    pie: PropTypes.object,\r\n    fetchGraphChart: PropTypes.func.isRequired,\r\n    fetchGraphPie: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = store => ({\r\n    chart: store.lince.chart,\r\n    pie: store.lince.pie,\r\n});\r\nexport default connect(mapStateToProps, {\r\n    fetchGraphChart: fetchGraphChart,\r\n    fetchGraphPie: fetchGraphPie\r\n}, null, {forwardRef: true})(LinceSceneChart);","import React, {useEffect} from 'react';\r\nimport {Col, Row} from 'antd';\r\nimport styled from 'styled-components';\r\nimport PageHeader from '@iso/components/utility/pageHeader';\r\nimport basicStyle from '@iso/assets/styles/constants';\r\nimport {Provider, useDispatch} from 'react-redux';\r\nimport {store} from '../../redux/store';\r\nimport LincePieChart from \"../../components/lince/LincePieChart\";\r\nimport LinceSceneChart from \"../../components/lince/LinceSceneChart\";\r\nimport LayoutContent from \"@iso/components/utility/layoutContent\";\r\nimport StyledResizable from \"../../components/lince/StyledResizable\";\r\nimport {LinceLayoutContent, StyledLayoutContentWrapper} from \"../../components/lince/StyledLayoutComponents\";\r\nimport {fetchSessionParameters} from \"../../redux/lince/videoActions\";\r\nimport FullscreenBox from \"../../components/utility/FullscreenBox\";\r\nimport IntlMessages from \"@iso/components/utility/intlMessages\";\r\n\r\n/*\r\nGA code\r\n */\r\nimport siteConfig from '../../config/site.config';\r\nimport ReactGA from 'react-ga';\r\nReactGA.initialize(siteConfig.google.analyticsKey);\r\nReactGA.pageview(window.location.pathname + window.location.search);\r\n/*\r\nEnd GA code\r\n */\r\nconst StyledLayout = styled(LayoutContent)`\r\n    padding: 5px 5px 5px 5px!important;\r\n`;\r\nexport default function () {\r\n    const dispatch = useDispatch();\r\n    const {rowStyle, colStyle, gutter} = basicStyle;\r\n    useEffect(() => {\r\n        dispatch(fetchSessionParameters());\r\n    }, [dispatch]);\r\n    return (\r\n        <Provider store={store}>\r\n            <StyledLayoutContentWrapper>\r\n                <LinceLayoutContent>\r\n                    <PageHeader><IntlMessages id=\"results\"/></PageHeader>\r\n                    <StyledLayout>\r\n                        <Row style={rowStyle} gutter={gutter} justify=\"start\">\r\n                            <Col md={24} sm={24} xs={24} style={colStyle}>\r\n                                <div style={{display: 'flex', width: '100%', height: '100%'}}>\r\n                                    <StyledResizable defaultSize={{width: '35%', height: '100%'}}\r\n                                                     minWidth=\"300\"\r\n                                                     minHeight=\"600\">\r\n                                        <FullscreenBox title={<IntlMessages id=\"quick-graph\"/>}>\r\n                                            <LincePieChart/>\r\n                                        </FullscreenBox>\r\n                                    </StyledResizable>\r\n                                    <div style={{width: \"100vw\"}}>\r\n                                        <FullscreenBox title={<IntlMessages id=\"time-graph\"/>}>\r\n                                        <LinceSceneChart/>\r\n                                        </FullscreenBox>\r\n                                    </div>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </StyledLayout>\r\n                </LinceLayoutContent>\r\n            </StyledLayoutContentWrapper>\r\n        </Provider>\r\n    );\r\n}","import styled from 'styled-components';\n\nconst LayoutContentWrapper = styled.div`\n  padding: 40px 20px;\n  display: flex;\n  flex-flow: row wrap;\n  overflow: hidden;\n\n  @media only screen and (max-width: 767px) {\n    padding: 50px 20px;\n  }\n\n  @media (max-width: 580px) {\n    padding: 15px;\n  }\n`;\n\nexport { LayoutContentWrapper };\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n\nconst LayoutContentStyle = styled.div`\n  width: 100%;\n  padding: 35px;\n  background-color: #ffffff;\n  border: 1px solid ${palette('border', 0)};\n  height: 100%;\n`;\n\nexport default LayoutContentStyle;\n","import LayoutContentStyle from './layoutContent.style';\n\nexport default LayoutContentStyle;\n","export const colors = {\n  blue: {\n    deep: 'rgb(0, 121, 191)',\n    light: 'lightblue',\n    lighter: '#d9fcff',\n    soft: '#E6FCFF',\n  },\n  black: '#4d4d4d',\n  shadow: 'rgba(0,0,0,0.2)',\n  grey: {\n    darker: '#C1C7D0',\n    dark: '#E2E4E6',\n    medium: '#DFE1E5',\n    N30: '#EBECF0',\n    light: '#F4F5F7',\n  },\n  green: 'rgb(185, 244, 188)',\n  white: 'white',\n  purple: 'rebeccapurple',\n  orange: '#FF991F',\n};\nexport const grid = 8;\n\nexport const borderRadius = 2;\nconst rowStyle = {\n  width: '100%',\n  display: 'flex',\n  flexFlow: 'row wrap',\n};\nconst colStyle = {\n  marginBottom: '16px',\n};\nconst gutter = 16;\n\nconst basicStyle = {\n  rowStyle,\n  colStyle,\n  gutter,\n};\nexport default basicStyle;\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n\nconst BoxWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n  background-color: #ffffff;\n  border: 1px solid ${palette('border', 0)};\n  margin: 0 0 30px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  @media only screen and (max-width: 767px) {\n    padding: 20px;\n    ${'' /* margin: 0 10px 30px; */};\n  }\n\n  &.half {\n    width: calc(50% - 34px);\n    @media (max-width: 767px) {\n      width: 100%;\n    }\n  }\n`;\n\nexport { BoxWrapper };\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n\nconst BoxTitle = styled.h3`\n  font-size: 14px;\n  font-weight: 500;\n  color: ${palette('text', 0)};\n  margin: 0;\n  margin-bottom: 5px;\n`;\n\nconst BoxSubTitle = styled.p`\n  font-size: 13px;\n  font-weight: 400;\n  color: ${palette('text', 3)};\n  line-height: 24px;\n`;\n\nexport { BoxTitle, BoxSubTitle };\n","import React from 'react';\nimport { BoxTitle, BoxSubTitle } from './boxTitle.style';\n\nexport default props => {\n  return (\n    <div>\n      {props.title ? (\n        <BoxTitle className=\"isoBoxTitle\"> {props.title} </BoxTitle>\n      ) : (\n        ''\n      )}\n      {props.subtitle ? (\n        <BoxSubTitle className=\"isoBoxSubTitle\"> {props.subtitle} </BoxSubTitle>\n      ) : (\n        ''\n      )}\n    </div>\n  );\n};\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\nimport WithDirection from '@iso/lib/helpers/rtl';\nconst WDComponentTitleWrapper = styled.h1`\n  font-size: 19px;\n  font-weight: 500;\n  color: ${palette('secondary', 2)};\n  width: 100%;\n  margin-right: 10px;\n  margin-bottom: 10px;\n  display: flex;\n  align-items: center;\n  white-space: nowrap;\n\n  @media only screen and (max-width: 767px) {\n    margin: 0 10px;\n    margin-bottom: 30px;\n  }\n\n  &:before {\n    content: '';\n    width: 5px;\n    height: 40px;\n    background-color: ${palette('secondary', 3)};\n    display: flex;\n    margin: ${props =>\n      props['data-rtl'] === 'rtl' ? '0 0 0 15px' : '0 15px 0 0'};\n  }\n\n  &:after {\n    content: '';\n    width: 100%;\n    height: 1px;\n    background-color: ${palette('secondary', 3)};\n    display: flex;\n    margin: ${props =>\n      props['data-rtl'] === 'rtl' ? '0 15px 0 0' : '0 0 0 15px'};\n  }\n`;\n\nconst ComponentTitleWrapper = WithDirection(WDComponentTitleWrapper);\nexport { ComponentTitleWrapper };\n","import React from 'react';\nimport { ComponentTitleWrapper } from './pageHeader.style';\n\nexport default props => (\n  <ComponentTitleWrapper className=\"isoComponentTitle\">\n    {props.children}\n  </ComponentTitleWrapper>\n);\n","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport LayoutContent from \"@iso/components/utility/layoutContent\";\r\nimport {LayoutContentWrapper} from \"@iso/components/utility/layoutWrapper.style\";\r\nimport {Col} from \"antd\";\r\n\r\nexport function LinceLayoutContent(props) {\r\n    return <LayoutContent {...props} className={\"mainContent\"}/>\r\n}\r\n\r\nexport const StyledLayoutContentWrapper = styled(LayoutContentWrapper)`\r\n    padding: 5px 5px!important;  \r\n    .mainContent{\r\n        padding: 5px 5px!important;\r\n    }\r\n`;\r\n\r\n\r\nexport const CenteredCol = styled(Col)`\r\n    text-align: center;\r\n`","import React from 'react';\r\nimport {Resizable} from 're-resizable';\r\nconst style = {\r\n    zIndex:\"9999!important\",\r\n    borderRight: 'solid 5px #ddd',\r\n    margin: '5px 5 5 5'\r\n}\r\nexport default function StyledResizable(props) {\r\n    return <Resizable {...props} style={style}/>\r\n}\r\n","import React, {useState} from 'react';\r\nimport BoxTitleWrapper from '@iso/components/utility/boxTitle';\r\nimport {BoxWrapper} from '@iso/components/utility/box.style';\r\nimport {FullscreenExitOutlined, FullscreenOutlined} from \"@ant-design/icons\";\r\nimport ReactFullScreenElement from \"react-fullscreen-element\";\r\nimport {Button} from \"antd\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\n/**\r\n * Coge el estado de la aplicacion y añade un padding al componente fullscreen segun esté colapsada o no\r\n * (flipa-lo)\r\n * @param props\r\n * @returns {*}\r\n */\r\nexport default props => {\r\n    const {collapsed} = useSelector(state => state.App);\r\n    const [fullscreen, setFullscreen] = useState(false);\r\n    let icon, style = {};\r\n    if (!fullscreen) {\r\n        icon = <Button shape=\"circle\" icon={<FullscreenOutlined/>} onClick={() => setFullscreen(true)}/>\r\n    } else {\r\n        style = {zIndex: '9999', paddingLeft: collapsed?\"65px\":\"170px\", paddingTop: \"70px\"};\r\n        icon = <Button shape=\"circle\" icon={<FullscreenExitOutlined/>} onClick={() => setFullscreen(false)}/>\r\n    }\r\n    return <ReactFullScreenElement allowScrollbar={true} fullScreen={fullscreen}>\r\n        <div style={style}>\r\n            <BoxWrapper className={`${props.className ? props.className : ''} isoBoxWrapper`}\r\n                        style={props.style}>\r\n\r\n                <BoxTitleWrapper title={<>{icon}&#160;{props.title}</>} subtitle={props.subtitle}/>\r\n                {props.children}\r\n            </BoxWrapper>\r\n        </div>\r\n    </ReactFullScreenElement>\r\n}\r\n"],"sourceRoot":""}